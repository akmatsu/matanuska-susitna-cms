// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x"]
  provider      = "prisma-client-js"
}

model Alert {
  id          String    @id @default(cuid())
  title       String    @default("")
  body        String?
  urgency     Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  editorNotes String    @default("")
}

model AssemblyDistrict {
  id                       String      @id @default(cuid())
  heroImage                String?
  title                    String      @unique @default("")
  description              String      @default("")
  publishAt                DateTime?
  unpublishAt              DateTime?
  reviewDate               DateTime?
  slug                     String      @unique @default("")
  owner                    User?       @relation("AssemblyDistrict_owner", fields: [ownerId], references: [id])
  ownerId                  String?     @map("owner")
  body                     String?
  tags                     Tag[]       @relation("AssemblyDistrict_tags")
  userGroups               UserGroup[] @relation("AssemblyDistrict_userGroups")
  contacts                 Contact[]   @relation("AssemblyDistrict_contacts")
  createdAt                DateTime?   @default(now())
  updatedAt                DateTime?   @default(now()) @updatedAt
  photo                    Image?      @relation("AssemblyDistrict_photo", fields: [photoId], references: [id])
  photoId                  String?     @map("photo")
  memberName               String      @default("")
  bio                      String      @default("")
  address                  String      @default("")
  email                    String?
  phone                    String?
  fax                      String?
  termStart                DateTime?
  termEnd                  DateTime?
  from_Community_districts Community[] @relation("Community_districts")

  @@index([ownerId])
  @@index([photoId])
}

model Community {
  id          String             @id @default(cuid())
  heroImage   String?
  title       String             @unique @default("")
  description String             @default("")
  publishAt   DateTime?
  unpublishAt DateTime?
  reviewDate  DateTime?
  slug        String             @unique @default("")
  owner       User?              @relation("Community_owner", fields: [ownerId], references: [id])
  ownerId     String?            @map("owner")
  body        String?
  tags        Tag[]              @relation("Community_tags")
  userGroups  UserGroup[]        @relation("Community_userGroups")
  contacts    Contact[]          @relation("Community_contacts")
  createdAt   DateTime?          @default(now())
  updatedAt   DateTime?          @default(now()) @updatedAt
  mapId       String             @default("")
  services    Service[]          @relation("Community_services")
  districts   AssemblyDistrict[] @relation("Community_districts")

  @@index([ownerId])
}

model Contact {
  id                String             @id @default(cuid())
  name              String             @default("")
  title             String?
  phone             String?
  email             String?
  primaryServices   Service[]          @relation("Service_primaryContact")
  services          Service[]          @relation("Contact_services")
  communities       Community[]        @relation("Community_contacts")
  orgUnits          OrgUnit[]          @relation("Contact_orgUnits")
  facilities        Facility[]         @relation("Contact_facilities")
  parks             Park[]             @relation("Contact_parks")
  assemblyDistricts AssemblyDistrict[] @relation("AssemblyDistrict_contacts")
  trails            Trail[]            @relation("Contact_trails")
  user              User?              @relation("Contact_user", fields: [userId], references: [id])
  userId            String?            @unique @map("user")
  editorNotes       String             @default("")
}

model Document {
  id            String               @id @default(cuid())
  title         String               @default("")
  description   String               @default("")
  tags          Tag[]                @relation("Document_tags")
  file_filesize Int?
  file_filename String?
  collections   DocumentCollection[] @relation("Document_collections")
  editorNotes   String               @default("")

  @@index([title])
}

model DocumentCollection {
  id          String      @id @default(cuid())
  title       String      @default("")
  owner       User?       @relation("DocumentCollection_owner", fields: [ownerId], references: [id])
  ownerId     String?     @map("owner")
  documents   Document[]  @relation("Document_collections")
  tags        Tag[]       @relation("DocumentCollection_tags")
  userGroups  UserGroup[] @relation("DocumentCollection_userGroups")
  editorNotes String      @default("")

  @@index([ownerId])
}

model ExternalLink {
  id                            String    @id @default(cuid())
  label                         String    @default("")
  url                           Url?      @relation("ExternalLink_url", fields: [urlId], references: [id])
  urlId                         String?   @map("url")
  from_Service_primaryAction    Service[] @relation("Service_primaryAction")
  from_Service_secondaryActions Service[] @relation("Service_secondaryActions")

  @@index([urlId])
}

model Facility {
  id          String          @id @default(cuid())
  heroImage   String?
  title       String          @unique @default("")
  description String          @default("")
  publishAt   DateTime?
  unpublishAt DateTime?
  reviewDate  DateTime?
  slug        String          @unique @default("")
  owner       User?           @relation("Facility_owner", fields: [ownerId], references: [id])
  ownerId     String?         @map("owner")
  body        String?
  tags        Tag[]           @relation("Facility_tags")
  userGroups  UserGroup[]     @relation("Facility_userGroups")
  address     Location?       @relation("Facility_address", fields: [addressId], references: [id])
  addressId   String?         @map("address")
  contacts    Contact[]       @relation("Contact_facilities")
  hours       OperatingHour[] @relation("Facility_hours")
  createdAt   DateTime?       @default(now())
  updatedAt   DateTime?       @default(now()) @updatedAt
  services    Service[]       @relation("Facility_services")
  park        Park?           @relation("Facility_park", fields: [parkId], references: [id])
  parkId      String?         @map("park")

  @@index([ownerId])
  @@index([addressId])
  @@index([parkId])
}

model Highlight {
  id           String        @id @default(cuid())
  title        String        @unique @default("")
  publishAt    DateTime?
  unpublishAt  DateTime?
  reviewDate   DateTime?
  image        String?
  message      String        @default("")
  linkedItem   InternalLink? @relation("Highlight_linkedItem", fields: [linkedItemId], references: [id])
  linkedItemId String?       @map("linkedItem")
  editorNotes  String        @default("")
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @default(now()) @updatedAt

  @@index([linkedItemId])
}

model Image {
  id                          String             @id @default(cuid())
  title                       String             @unique @default("")
  description                 String             @default("")
  tags                        Tag[]              @relation("Image_tags")
  file_id                     String?
  file_filesize               Int?
  file_width                  Int?
  file_height                 Int?
  file_extension              String?
  from_AssemblyDistrict_photo AssemblyDistrict[] @relation("AssemblyDistrict_photo")
}

model InternalLink {
  id                        String      @id @default(cuid())
  label                     String      @default("")
  selectItem                Json?
  from_Highlight_linkedItem Highlight[] @relation("Highlight_linkedItem")
}

model Location {
  id                    String     @id @default(cuid())
  title                 String     @unique @default("")
  description           String     @default("")
  lineOne               String     @default("")
  lineTwo               String     @default("")
  city                  String     @default("")
  state                 String     @default("AK")
  zip                   String
  from_Facility_address Facility[] @relation("Facility_address")
  from_Park_address     Park[]     @relation("Park_address")
  from_Trail_address    Trail[]    @relation("Trail_address")
}

model OrgUnit {
  id          String      @id @default(cuid())
  heroImage   String?
  title       String      @unique @default("")
  description String      @default("")
  publishAt   DateTime?
  unpublishAt DateTime?
  reviewDate  DateTime?
  slug        String      @unique @default("")
  owner       User?       @relation("OrgUnit_owner", fields: [ownerId], references: [id])
  ownerId     String?     @map("owner")
  body        String?
  tags        Tag[]       @relation("OrgUnit_tags")
  userGroups  UserGroup[] @relation("OrgUnit_userGroups")
  contacts    Contact[]   @relation("Contact_orgUnits")
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @default(now()) @updatedAt
  showPage    Boolean     @default(true)
  services    Service[]   @relation("OrgUnit_services")
  children    OrgUnit[]   @relation("OrgUnit_parent")
  parent      OrgUnit?    @relation("OrgUnit_parent", fields: [parentId], references: [id])
  parentId    String?     @map("parent")

  @@index([ownerId])
  @@index([parentId])
}

model OperatingHour {
  id                  String     @id @default(cuid())
  day                 String
  open                String     @default("")
  close               String     @default("")
  from_Facility_hours Facility[] @relation("Facility_hours")
  from_Park_hours     Park[]     @relation("Park_hours")
}

model Park {
  id          String          @id @default(cuid())
  heroImage   String?
  title       String          @unique @default("")
  description String          @default("")
  publishAt   DateTime?
  unpublishAt DateTime?
  reviewDate  DateTime?
  slug        String          @unique @default("")
  owner       User?           @relation("Park_owner", fields: [ownerId], references: [id])
  ownerId     String?         @map("owner")
  body        String?
  tags        Tag[]           @relation("Park_tags")
  userGroups  UserGroup[]     @relation("Park_userGroups")
  address     Location?       @relation("Park_address", fields: [addressId], references: [id])
  addressId   String?         @map("address")
  contacts    Contact[]       @relation("Contact_parks")
  hours       OperatingHour[] @relation("Park_hours")
  createdAt   DateTime?       @default(now())
  updatedAt   DateTime?       @default(now()) @updatedAt
  services    Service[]       @relation("Park_services")
  trails      Trail[]         @relation("Trail_park")
  facilities  Facility[]      @relation("Facility_park")

  @@index([ownerId])
  @@index([addressId])
}

model Service {
  id               String         @id @default(cuid())
  heroImage        String?
  title            String         @unique @default("")
  description      String         @default("")
  publishAt        DateTime?
  unpublishAt      DateTime?
  reviewDate       DateTime?
  slug             String         @unique @default("")
  owner            User?          @relation("Service_owner", fields: [ownerId], references: [id])
  ownerId          String?        @map("owner")
  body             String?
  tags             Tag[]          @relation("Service_tags")
  userGroups       UserGroup[]    @relation("Service_userGroups")
  primaryAction    ExternalLink?  @relation("Service_primaryAction", fields: [primaryActionId], references: [id])
  primaryActionId  String?        @map("primaryAction")
  secondaryActions ExternalLink[] @relation("Service_secondaryActions")
  primaryContact   Contact?       @relation("Service_primaryContact", fields: [primaryContactId], references: [id])
  primaryContactId String?        @map("primaryContact")
  contacts         Contact[]      @relation("Contact_services")
  createdAt        DateTime?      @default(now())
  updatedAt        DateTime?      @default(now()) @updatedAt
  communities      Community[]    @relation("Community_services")
  orgUnits         OrgUnit[]      @relation("OrgUnit_services")
  trails           Trail[]        @relation("Service_trails")
  parks            Park[]         @relation("Park_services")
  facilities       Facility[]     @relation("Facility_services")
  editorNotes      String         @default("")

  @@index([ownerId])
  @@index([primaryActionId])
  @@index([primaryContactId])
}

model Tag {
  id                  String               @id @default(cuid())
  name                String               @default("")
  services            Service[]            @relation("Service_tags")
  communities         Community[]          @relation("Community_tags")
  documents           Document[]           @relation("Document_tags")
  images              Image[]              @relation("Image_tags")
  documentCollections DocumentCollection[] @relation("DocumentCollection_tags")
  orgUnits            OrgUnit[]            @relation("OrgUnit_tags")
  facilities          Facility[]           @relation("Facility_tags")
  parks               Park[]               @relation("Park_tags")
  trails              Trail[]              @relation("Tag_trails")
  assemblyDistricts   AssemblyDistrict[]   @relation("AssemblyDistrict_tags")
}

model Trail {
  id                 String      @id @default(cuid())
  heroImage          String?
  title              String      @unique @default("")
  description        String      @default("")
  publishAt          DateTime?
  unpublishAt        DateTime?
  reviewDate         DateTime?
  slug               String      @unique @default("")
  owner              User?       @relation("Trail_owner", fields: [ownerId], references: [id])
  ownerId            String?     @map("owner")
  body               String?
  tags               Tag[]       @relation("Tag_trails")
  userGroups         UserGroup[] @relation("Trail_userGroups")
  address            Location?   @relation("Trail_address", fields: [addressId], references: [id])
  addressId          String?     @map("address")
  contacts           Contact[]   @relation("Contact_trails")
  createdAt          DateTime?   @default(now())
  updatedAt          DateTime?   @default(now()) @updatedAt
  open               Boolean     @default(false)
  summer             Boolean     @default(false)
  fall               Boolean     @default(false)
  winter             Boolean     @default(false)
  spring             Boolean     @default(false)
  hiking             Boolean     @default(false)
  biking             Boolean     @default(false)
  horsebackRiding    Boolean     @default(false)
  crossCountrySkiing Boolean     @default(false)
  snowshoeing        Boolean     @default(false)
  frisbeeGolf        Boolean     @default(false)
  dogWalking         Boolean     @default(false)
  running            Boolean     @default(false)
  snowMachining      Boolean     @default(false)
  atv                Boolean     @default(false)
  dirtBiking         Boolean     @default(false)
  mushing            Boolean     @default(false)
  difficulty         String?
  length             String      @default("")
  elevationChange    String      @default("")
  services           Service[]   @relation("Service_trails")
  park               Park?       @relation("Trail_park", fields: [parkId], references: [id])
  parkId             String?     @map("park")

  @@index([ownerId])
  @@index([addressId])
  @@index([parkId])
}

model Url {
  id                    String         @id @default(cuid())
  title                 String         @unique @default("")
  description           String         @default("")
  url                   String         @unique @default("")
  owner                 User?          @relation("Url_owner", fields: [ownerId], references: [id])
  ownerId               String?        @map("owner")
  createdAt             DateTime?      @default(now())
  updatedAt             DateTime?      @default(now()) @updatedAt
  from_ExternalLink_url ExternalLink[] @relation("ExternalLink_url")

  @@index([ownerId])
}

model User {
  id                            String               @id @default(cuid())
  authId                        String               @unique @default("")
  name                          String               @default("")
  email                         String               @unique @default("")
  password                      String?
  contact                       Contact?             @relation("Contact_user")
  role                          Int?                 @default(4)
  groups                        UserGroup[]          @relation("User_groups")
  createdAt                     DateTime?            @default(now())
  updatedAt                     DateTime?            @default(now()) @updatedAt
  from_AssemblyDistrict_owner   AssemblyDistrict[]   @relation("AssemblyDistrict_owner")
  from_Community_owner          Community[]          @relation("Community_owner")
  from_DocumentCollection_owner DocumentCollection[] @relation("DocumentCollection_owner")
  from_Facility_owner           Facility[]           @relation("Facility_owner")
  from_OrgUnit_owner            OrgUnit[]            @relation("OrgUnit_owner")
  from_Park_owner               Park[]               @relation("Park_owner")
  from_Service_owner            Service[]            @relation("Service_owner")
  from_Trail_owner              Trail[]              @relation("Trail_owner")
  from_Url_owner                Url[]                @relation("Url_owner")
  from_UserGroup_owner          UserGroup[]          @relation("UserGroup_owner")
}

model UserGroup {
  id                  String               @id @default(cuid())
  name                String               @default("")
  owner               User?                @relation("UserGroup_owner", fields: [ownerId], references: [id])
  ownerId             String?              @map("owner")
  description         String               @default("")
  users               User[]               @relation("User_groups")
  services            Service[]            @relation("Service_userGroups")
  parks               Park[]               @relation("Park_userGroups")
  trails              Trail[]              @relation("Trail_userGroups")
  facilities          Facility[]           @relation("Facility_userGroups")
  communities         Community[]          @relation("Community_userGroups")
  orgUnits            OrgUnit[]            @relation("OrgUnit_userGroups")
  documentCollections DocumentCollection[] @relation("DocumentCollection_userGroups")
  assemblyDistricts   AssemblyDistrict[]   @relation("AssemblyDistrict_userGroups")

  @@index([ownerId])
}
