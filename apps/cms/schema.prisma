// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x"]
  provider      = "prisma-client-js"
}

model BoardPage {
  id                  Int            @id
  heroImage           String?
  title               String         @unique @default("")
  description         String         @default("")
  owner               User?          @relation("BoardPage_owner", fields: [ownerId], references: [id])
  ownerId             String?        @map("owner")
  body                String?
  actions             InternalLink[] @relation("BoardPage_actions")
  documents           Document[]     @relation("BoardPage_documents")
  vacancyReport       Document?      @relation("BoardPage_vacancyReport", fields: [vacancyReportId], references: [id])
  vacancyReportId     String?        @map("vacancyReport")
  applicationForm     Document?      @relation("BoardPage_applicationForm", fields: [applicationFormId], references: [id])
  applicationFormId   String?        @map("applicationForm")
  ParliTrainingLink   ExternalLink?  @relation("BoardPage_ParliTrainingLink", fields: [ParliTrainingLinkId], references: [id])
  ParliTrainingLinkId String?        @map("ParliTrainingLink")
  contacts            Contact[]      @relation("BoardPage_contacts")
  createdAt           DateTime?      @default(now())
  updatedAt           DateTime?      @default(now()) @updatedAt

  @@index([ownerId])
  @@index([vacancyReportId])
  @@index([applicationFormId])
  @@index([ParliTrainingLinkId])
}

model HomePage {
  id               Int        @id
  heroImage        String?
  title            String     @unique @default("")
  description      String     @default("")
  toolbeltOne      Highlight? @relation("HomePage_toolbeltOne", fields: [toolbeltOneId], references: [id])
  toolbeltOneId    String?    @map("toolbeltOne")
  toolbeltTwo      Highlight? @relation("HomePage_toolbeltTwo", fields: [toolbeltTwoId], references: [id])
  toolbeltTwoId    String?    @map("toolbeltTwo")
  toolbeltThree    Highlight? @relation("HomePage_toolbeltThree", fields: [toolbeltThreeId], references: [id])
  toolbeltThreeId  String?    @map("toolbeltThree")
  toolbeltFour     Highlight? @relation("HomePage_toolbeltFour", fields: [toolbeltFourId], references: [id])
  toolbeltFourId   String?    @map("toolbeltFour")
  highlightOne     Highlight? @relation("HomePage_highlightOne", fields: [highlightOneId], references: [id])
  highlightOneId   String?    @map("highlightOne")
  highlightTwo     Highlight? @relation("HomePage_highlightTwo", fields: [highlightTwoId], references: [id])
  highlightTwoId   String?    @map("highlightTwo")
  highlightThree   Highlight? @relation("HomePage_highlightThree", fields: [highlightThreeId], references: [id])
  highlightThreeId String?    @map("highlightThree")
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @default(now()) @updatedAt

  @@index([toolbeltOneId])
  @@index([toolbeltTwoId])
  @@index([toolbeltThreeId])
  @@index([toolbeltFourId])
  @@index([highlightOneId])
  @@index([highlightTwoId])
  @@index([highlightThreeId])
}

model Election {
  id                                  String            @id @default(cuid())
  heroImage                           String?
  title                               String            @unique @default("")
  description                         String            @default("")
  slug                                String            @unique @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  owner                               User?             @relation("Election_owner", fields: [ownerId], references: [id])
  ownerId                             String?           @map("owner")
  electionDate                        DateTime
  earlyVotingStartDate                DateTime?
  voterRegistrationDeadline           DateTime?
  candidateFilingDocuments            Document[]        @relation("Election_candidateFilingDocuments")
  candidatePacketAvailability         DateTime?
  candidateFilingStartDate            DateTime?
  candidateFilingDeadline             DateTime?
  officesToBeFilled                   String?
  absenteeVotingApplication           Document?         @relation("Election_absenteeVotingApplication", fields: [absenteeVotingApplicationId], references: [id])
  absenteeVotingApplicationId         String?           @map("absenteeVotingApplication")
  absenteeApplicationDeadline         DateTime?
  electionOfficialApplication         Document?         @relation("Election_electionOfficialApplication", fields: [electionOfficialApplicationId], references: [id])
  electionOfficialApplicationId       String?           @map("electionOfficialApplication")
  electionOfficialApplicationDeadline DateTime?
  candidates                          Document?         @relation("Election_candidates", fields: [candidatesId], references: [id])
  candidatesId                        String?           @map("candidates")
  propositions                        Document[]        @relation("Election_propositions")
  electionBrochure                    Document?         @relation("Election_electionBrochure", fields: [electionBrochureId], references: [id])
  electionBrochureId                  String?           @map("electionBrochure")
  electionBallots                     Document[]        @relation("Election_electionBallots")
  result                              ElectionResult?   @relation("Election_result", fields: [resultId], references: [id])
  resultId                            String?           @unique @map("result")
  tags                                Tag[]             @relation("Election_tags")
  userGroups                          UserGroup[]       @relation("Election_userGroups")
  createdAt                           DateTime?         @default(now())
  updatedAt                           DateTime?         @default(now()) @updatedAt
  status                              String            @default("unpublished")
  drafts                              ElectionDraft[]   @relation("ElectionDraft_original")
  makeDrafts                          String?
  versions                            ElectionVersion[] @relation("ElectionVersion_original")
  currentVersion                      ElectionVersion?  @relation("Election_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                    String?           @unique @map("currentVersion")

  @@index([ownerId])
  @@index([absenteeVotingApplicationId])
  @@index([electionOfficialApplicationId])
  @@index([candidatesId])
  @@index([electionBrochureId])
}

model ElectionVersion {
  id                                  String          @id @default(cuid())
  original                            Election?       @relation("ElectionVersion_original", fields: [originalId], references: [id])
  originalId                          String?         @map("original")
  heroImage                           String?
  title                               String          @unique @default("")
  description                         String          @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  owner                               User?           @relation("ElectionVersion_owner", fields: [ownerId], references: [id])
  ownerId                             String?         @map("owner")
  electionDate                        DateTime
  earlyVotingStartDate                DateTime?
  voterRegistrationDeadline           DateTime?
  candidateFilingDocuments            Document[]      @relation("ElectionVersion_candidateFilingDocuments")
  candidatePacketAvailability         DateTime?
  candidateFilingStartDate            DateTime?
  candidateFilingDeadline             DateTime?
  officesToBeFilled                   String?
  absenteeVotingApplication           Document?       @relation("ElectionVersion_absenteeVotingApplication", fields: [absenteeVotingApplicationId], references: [id])
  absenteeVotingApplicationId         String?         @map("absenteeVotingApplication")
  absenteeApplicationDeadline         DateTime?
  electionOfficialApplication         Document?       @relation("ElectionVersion_electionOfficialApplication", fields: [electionOfficialApplicationId], references: [id])
  electionOfficialApplicationId       String?         @map("electionOfficialApplication")
  electionOfficialApplicationDeadline DateTime?
  candidates                          Document?       @relation("ElectionVersion_candidates", fields: [candidatesId], references: [id])
  candidatesId                        String?         @map("candidates")
  propositions                        Document[]      @relation("ElectionVersion_propositions")
  electionBrochure                    Document?       @relation("ElectionVersion_electionBrochure", fields: [electionBrochureId], references: [id])
  electionBrochureId                  String?         @map("electionBrochure")
  electionBallots                     Document[]      @relation("ElectionVersion_electionBallots")
  result                              ElectionResult? @relation("ElectionVersion_result", fields: [resultId], references: [id])
  resultId                            String?         @map("result")
  tags                                Tag[]           @relation("ElectionVersion_tags")
  userGroups                          UserGroup[]     @relation("ElectionVersion_userGroups")
  createdAt                           DateTime?       @default(now())
  updatedAt                           DateTime?       @default(now()) @updatedAt
  isLive                              Election?       @relation("Election_currentVersion")
  republish                           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([absenteeVotingApplicationId])
  @@index([electionOfficialApplicationId])
  @@index([candidatesId])
  @@index([electionBrochureId])
  @@index([resultId])
}

model ElectionDraft {
  id                                  String          @id @default(cuid())
  original                            Election?       @relation("ElectionDraft_original", fields: [originalId], references: [id])
  originalId                          String?         @map("original")
  heroImage                           String?
  title                               String          @unique @default("")
  description                         String          @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  owner                               User?           @relation("ElectionDraft_owner", fields: [ownerId], references: [id])
  ownerId                             String?         @map("owner")
  electionDate                        DateTime
  earlyVotingStartDate                DateTime?
  voterRegistrationDeadline           DateTime?
  candidateFilingDocuments            Document[]      @relation("ElectionDraft_candidateFilingDocuments")
  candidatePacketAvailability         DateTime?
  candidateFilingStartDate            DateTime?
  candidateFilingDeadline             DateTime?
  officesToBeFilled                   String?
  absenteeVotingApplication           Document?       @relation("ElectionDraft_absenteeVotingApplication", fields: [absenteeVotingApplicationId], references: [id])
  absenteeVotingApplicationId         String?         @map("absenteeVotingApplication")
  absenteeApplicationDeadline         DateTime?
  electionOfficialApplication         Document?       @relation("ElectionDraft_electionOfficialApplication", fields: [electionOfficialApplicationId], references: [id])
  electionOfficialApplicationId       String?         @map("electionOfficialApplication")
  electionOfficialApplicationDeadline DateTime?
  candidates                          Document?       @relation("ElectionDraft_candidates", fields: [candidatesId], references: [id])
  candidatesId                        String?         @map("candidates")
  propositions                        Document[]      @relation("ElectionDraft_propositions")
  electionBrochure                    Document?       @relation("ElectionDraft_electionBrochure", fields: [electionBrochureId], references: [id])
  electionBrochureId                  String?         @map("electionBrochure")
  electionBallots                     Document[]      @relation("ElectionDraft_electionBallots")
  result                              ElectionResult? @relation("ElectionDraft_result", fields: [resultId], references: [id])
  resultId                            String?         @map("result")
  tags                                Tag[]           @relation("ElectionDraft_tags")
  userGroups                          UserGroup[]     @relation("ElectionDraft_userGroups")
  createdAt                           DateTime?       @default(now())
  updatedAt                           DateTime?       @default(now()) @updatedAt
  publish                             String?

  @@index([originalId])
  @@index([ownerId])
  @@index([absenteeVotingApplicationId])
  @@index([electionOfficialApplicationId])
  @@index([candidatesId])
  @@index([electionBrochureId])
  @@index([resultId])
}

model ElectionResult {
  id                          String            @id @default(cuid())
  election                    Election?         @relation("Election_result")
  document                    Document?         @relation("ElectionResult_document", fields: [documentId], references: [id])
  documentId                  String?           @map("document")
  isOfficial                  Boolean           @default(false)
  from_ElectionVersion_result ElectionVersion[] @relation("ElectionVersion_result")
  from_ElectionDraft_result   ElectionDraft[]   @relation("ElectionDraft_result")

  @@index([documentId])
}

model EarlyVotingLocation {
  id                                      String          @id @default(cuid())
  order                                   Int             @default(0)
  title                                   String          @default("")
  address                                 Location?       @relation("EarlyVotingLocation_address", fields: [addressId], references: [id])
  addressId                               String?         @map("address")
  hours                                   OperatingHour[] @relation("EarlyVotingLocation_hours")
  from_ElectionsPage_earlyVotingLocations ElectionsPage[] @relation("ElectionsPage_earlyVotingLocations")

  @@index([addressId])
}

model ElectionsPage {
  id                          Int                   @id
  heroImage                   String?
  title                       String                @unique @default("")
  description                 String                @default("")
  howElectionsWork            String?
  owner                       User?                 @relation("ElectionsPage_owner", fields: [ownerId], references: [id])
  ownerId                     String?               @map("owner")
  userGroups                  UserGroup[]           @relation("ElectionsPage_userGroups")
  stateElectionContact        Contact?              @relation("ElectionsPage_stateElectionContact", fields: [stateElectionContactId], references: [id])
  stateElectionContactId      String?               @map("stateElectionContact")
  boroughElectionContact      Contact?              @relation("ElectionsPage_boroughElectionContact", fields: [boroughElectionContactId], references: [id])
  boroughElectionContactId    String?               @map("boroughElectionContact")
  referendumProcessDocument   Document?             @relation("ElectionsPage_referendumProcessDocument", fields: [referendumProcessDocumentId], references: [id])
  referendumProcessDocumentId String?               @map("referendumProcessDocument")
  earlyVotingLocations        EarlyVotingLocation[] @relation("ElectionsPage_earlyVotingLocations")
  createdAt                   DateTime?             @default(now())
  updatedAt                   DateTime?             @default(now()) @updatedAt

  @@index([ownerId])
  @@index([stateElectionContactId])
  @@index([boroughElectionContactId])
  @@index([referendumProcessDocumentId])
}

model AssemblyDistrict {
  id                                             String                    @id @default(cuid())
  heroImage                                      String?
  title                                          String                    @unique @default("")
  description                                    String                    @default("")
  publishAt                                      DateTime?
  unpublishAt                                    DateTime?
  reviewDate                                     DateTime?
  slug                                           String                    @unique @default("")
  owner                                          User?                     @relation("AssemblyDistrict_owner", fields: [ownerId], references: [id])
  ownerId                                        String?                   @map("owner")
  body                                           String?
  tags                                           Tag[]                     @relation("AssemblyDistrict_tags")
  userGroups                                     UserGroup[]               @relation("AssemblyDistrict_userGroups")
  actions                                        InternalLink[]            @relation("AssemblyDistrict_actions")
  documents                                      Document[]                @relation("AssemblyDistrict_documents")
  address                                        Location?                 @relation("AssemblyDistrict_address", fields: [addressId], references: [id])
  addressId                                      String?                   @map("address")
  contacts                                       Contact[]                 @relation("AssemblyDistrict_contacts")
  redirect                                       Redirect?                 @relation("AssemblyDistrict_redirect", fields: [redirectId], references: [id])
  redirectId                                     String?                   @map("redirect")
  events                                         Event[]                   @relation("AssemblyDistrict_events")
  topics                                         Topic[]                   @relation("AssemblyDistrict_topics")
  publicNotices                                  PublicNotice[]            @relation("AssemblyDistrict_publicNotices")
  communities                                    Community[]               @relation("AssemblyDistrict_communities")
  orgUnits                                       OrgUnit[]                 @relation("AssemblyDistrict_orgUnits")
  assemblyDistricts                              AssemblyDistrict[]        @relation("AssemblyDistrict_assemblyDistricts")
  services                                       Service[]                 @relation("AssemblyDistrict_services")
  createdAt                                      DateTime?                 @default(now())
  updatedAt                                      DateTime?                 @default(now()) @updatedAt
  photo                                          Image?                    @relation("AssemblyDistrict_photo", fields: [photoId], references: [id])
  photoId                                        String?                   @map("photo")
  memberName                                     String                    @default("")
  bio                                            String                    @default("")
  email                                          String?
  phone                                          String?
  fax                                            String?
  termStart                                      DateTime?
  termEnd                                        DateTime?
  boards                                         Board[]                   @relation("AssemblyDistrict_boards")
  facilities                                     Facility[]                @relation("AssemblyDistrict_facilities")
  parks                                          Park[]                    @relation("AssemblyDistrict_parks")
  trails                                         Trail[]                   @relation("AssemblyDistrict_trails")
  plans                                          Plan[]                    @relation("AssemblyDistrict_plans")
  status                                         String                    @default("unpublished")
  drafts                                         AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_original")
  makeDrafts                                     String?
  versions                                       AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_original")
  currentVersion                                 AssemblyDistrictVersion?  @relation("AssemblyDistrict_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                               String?                   @unique @map("currentVersion")
  from_AssemblyDistrict_assemblyDistricts        AssemblyDistrict[]        @relation("AssemblyDistrict_assemblyDistricts")
  from_AssemblyDistrictVersion_assemblyDistricts AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_assemblyDistricts")
  from_AssemblyDistrictDraft_assemblyDistricts   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_assemblyDistricts")
  from_BoardVersion_assemblyDistricts            BoardVersion[]            @relation("BoardVersion_assemblyDistricts")
  from_BoardDraft_assemblyDistricts              BoardDraft[]              @relation("BoardDraft_assemblyDistricts")
  from_CommunityVersion_assemblyDistricts        CommunityVersion[]        @relation("CommunityVersion_assemblyDistricts")
  from_CommunityDraft_assemblyDistricts          CommunityDraft[]          @relation("CommunityDraft_assemblyDistricts")
  from_FacilityVersion_assemblyDistricts         FacilityVersion[]         @relation("FacilityVersion_assemblyDistricts")
  from_FacilityDraft_assemblyDistricts           FacilityDraft[]           @relation("FacilityDraft_assemblyDistricts")
  from_OrgUnitVersion_assemblyDistricts          OrgUnitVersion[]          @relation("OrgUnitVersion_assemblyDistricts")
  from_OrgUnitDraft_assemblyDistricts            OrgUnitDraft[]            @relation("OrgUnitDraft_assemblyDistricts")
  from_ParkVersion_assemblyDistricts             ParkVersion[]             @relation("ParkVersion_assemblyDistricts")
  from_ParkDraft_assemblyDistricts               ParkDraft[]               @relation("ParkDraft_assemblyDistricts")
  from_PublicNoticeVersion_assemblyDistricts     PublicNoticeVersion[]     @relation("PublicNoticeVersion_assemblyDistricts")
  from_PublicNoticeDraft_assemblyDistricts       PublicNoticeDraft[]       @relation("PublicNoticeDraft_assemblyDistricts")
  from_ServiceVersion_assemblyDistricts          ServiceVersion[]          @relation("ServiceVersion_assemblyDistricts")
  from_ServiceDraft_assemblyDistricts            ServiceDraft[]            @relation("ServiceDraft_assemblyDistricts")
  from_TopicVersion_assemblyDistricts            TopicVersion[]            @relation("TopicVersion_assemblyDistricts")
  from_TopicDraft_assemblyDistricts              TopicDraft[]              @relation("TopicDraft_assemblyDistricts")
  from_TrailVersion_assemblyDistricts            TrailVersion[]            @relation("TrailVersion_assemblyDistricts")
  from_TrailDraft_assemblyDistricts              TrailDraft[]              @relation("TrailDraft_assemblyDistricts")
  from_PlanVersion_assemblyDistricts             PlanVersion[]             @relation("PlanVersion_assemblyDistricts")
  from_PlanDraft_assemblyDistricts               PlanDraft[]               @relation("PlanDraft_assemblyDistricts")
  from_EventDraft_assemblyDistricts              EventDraft[]              @relation("EventDraft_assemblyDistricts")
  from_EventVersion_assemblyDistricts            EventVersion[]            @relation("EventVersion_assemblyDistricts")

  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([photoId])
}

model AssemblyDistrictVersion {
  id                String             @id @default(cuid())
  original          AssemblyDistrict?  @relation("AssemblyDistrictVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("AssemblyDistrictVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("AssemblyDistrictVersion_tags")
  userGroups        UserGroup[]        @relation("AssemblyDistrictVersion_userGroups")
  actions           InternalLink[]     @relation("AssemblyDistrictVersion_actions")
  documents         Document[]         @relation("AssemblyDistrictVersion_documents")
  address           Location?          @relation("AssemblyDistrictVersion_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("AssemblyDistrictVersion_contacts")
  redirect          Redirect?          @relation("AssemblyDistrictVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("AssemblyDistrictVersion_events")
  topics            Topic[]            @relation("AssemblyDistrictVersion_topics")
  publicNotices     PublicNotice[]     @relation("AssemblyDistrictVersion_publicNotices")
  communities       Community[]        @relation("AssemblyDistrictVersion_communities")
  orgUnits          OrgUnit[]          @relation("AssemblyDistrictVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("AssemblyDistrictVersion_assemblyDistricts")
  services          Service[]          @relation("AssemblyDistrictVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  photo             Image?             @relation("AssemblyDistrictVersion_photo", fields: [photoId], references: [id])
  photoId           String?            @map("photo")
  memberName        String             @default("")
  bio               String             @default("")
  email             String?
  phone             String?
  fax               String?
  termStart         DateTime?
  termEnd           DateTime?
  boards            Board[]            @relation("AssemblyDistrictVersion_boards")
  facilities        Facility[]         @relation("AssemblyDistrictVersion_facilities")
  parks             Park[]             @relation("AssemblyDistrictVersion_parks")
  trails            Trail[]            @relation("AssemblyDistrictVersion_trails")
  plans             Plan[]             @relation("AssemblyDistrictVersion_plans")
  isLive            AssemblyDistrict?  @relation("AssemblyDistrict_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([photoId])
}

model AssemblyDistrictDraft {
  id                String             @id @default(cuid())
  original          AssemblyDistrict?  @relation("AssemblyDistrictDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("AssemblyDistrictDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("AssemblyDistrictDraft_tags")
  userGroups        UserGroup[]        @relation("AssemblyDistrictDraft_userGroups")
  actions           InternalLink[]     @relation("AssemblyDistrictDraft_actions")
  documents         Document[]         @relation("AssemblyDistrictDraft_documents")
  address           Location?          @relation("AssemblyDistrictDraft_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("AssemblyDistrictDraft_contacts")
  redirect          Redirect?          @relation("AssemblyDistrictDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("AssemblyDistrictDraft_events")
  topics            Topic[]            @relation("AssemblyDistrictDraft_topics")
  publicNotices     PublicNotice[]     @relation("AssemblyDistrictDraft_publicNotices")
  communities       Community[]        @relation("AssemblyDistrictDraft_communities")
  orgUnits          OrgUnit[]          @relation("AssemblyDistrictDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("AssemblyDistrictDraft_assemblyDistricts")
  services          Service[]          @relation("AssemblyDistrictDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  photo             Image?             @relation("AssemblyDistrictDraft_photo", fields: [photoId], references: [id])
  photoId           String?            @map("photo")
  memberName        String             @default("")
  bio               String             @default("")
  email             String?
  phone             String?
  fax               String?
  termStart         DateTime?
  termEnd           DateTime?
  boards            Board[]            @relation("AssemblyDistrictDraft_boards")
  facilities        Facility[]         @relation("AssemblyDistrictDraft_facilities")
  parks             Park[]             @relation("AssemblyDistrictDraft_parks")
  trails            Trail[]            @relation("AssemblyDistrictDraft_trails")
  plans             Plan[]             @relation("AssemblyDistrictDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([photoId])
}

model Board {
  id                                  String                    @id @default(cuid())
  heroImage                           String?
  title                               String                    @unique @default("")
  description                         String                    @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  slug                                String                    @unique @default("")
  owner                               User?                     @relation("Board_owner", fields: [ownerId], references: [id])
  ownerId                             String?                   @map("owner")
  body                                String?
  tags                                Tag[]                     @relation("Board_tags")
  userGroups                          UserGroup[]               @relation("Board_userGroups")
  actions                             InternalLink[]            @relation("Board_actions")
  documents                           Document[]                @relation("Board_documents")
  contacts                            Contact[]                 @relation("Board_contacts")
  redirect                            Redirect?                 @relation("Board_redirect", fields: [redirectId], references: [id])
  redirectId                          String?                   @map("redirect")
  events                              Event[]                   @relation("Board_events")
  topics                              Topic[]                   @relation("Board_topics")
  publicNotices                       PublicNotice[]            @relation("Board_publicNotices")
  communities                         Community[]               @relation("Board_communities")
  orgUnits                            OrgUnit[]                 @relation("Board_orgUnits")
  assemblyDistricts                   AssemblyDistrict[]        @relation("AssemblyDistrict_boards")
  services                            Service[]                 @relation("Board_services")
  createdAt                           DateTime?                 @default(now())
  updatedAt                           DateTime?                 @default(now()) @updatedAt
  directory                           Document?                 @relation("Board_directory", fields: [directoryId], references: [id])
  directoryId                         String?                   @map("directory")
  calendarId                          String                    @default("")
  calendarQueryString                 String                    @default("")
  linkToAgendas                       ExternalLink?             @relation("Board_linkToAgendas", fields: [linkToAgendasId], references: [id])
  linkToAgendasId                     String?                   @map("linkToAgendas")
  linkToResolutions                   ExternalLink?             @relation("Board_linkToResolutions", fields: [linkToResolutionsId], references: [id])
  linkToResolutionsId                 String?                   @map("linkToResolutions")
  linkToPublicOpinionMessage          ExternalLink?             @relation("Board_linkToPublicOpinionMessage", fields: [linkToPublicOpinionMessageId], references: [id])
  linkToPublicOpinionMessageId        String?                   @map("linkToPublicOpinionMessage")
  type                                String                    @default("board")
  isActive                            Boolean                   @default(true)
  status                              String                    @default("unpublished")
  drafts                              BoardDraft[]              @relation("BoardDraft_original")
  makeDrafts                          String?
  versions                            BoardVersion[]            @relation("BoardVersion_original")
  currentVersion                      BoardVersion?             @relation("Board_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                    String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_boards AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_boards")
  from_AssemblyDistrictDraft_boards   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_boards")
  from_CommunityVersion_boards        CommunityVersion[]        @relation("CommunityVersion_boards")
  from_CommunityDraft_boards          CommunityDraft[]          @relation("CommunityDraft_boards")
  from_OrgUnitVersion_boards          OrgUnitVersion[]          @relation("OrgUnitVersion_boards")
  from_OrgUnitDraft_boards            OrgUnitDraft[]            @relation("OrgUnitDraft_boards")
  from_PublicNoticeVersion_boards     PublicNoticeVersion[]     @relation("PublicNoticeVersion_boards")
  from_PublicNoticeDraft_boards       PublicNoticeDraft[]       @relation("PublicNoticeDraft_boards")
  from_ServiceVersion_boards          ServiceVersion[]          @relation("ServiceVersion_boards")
  from_ServiceDraft_boards            ServiceDraft[]            @relation("ServiceDraft_boards")
  from_TopicVersion_boards            TopicVersion[]            @relation("TopicVersion_boards")
  from_TopicDraft_boards              TopicDraft[]              @relation("TopicDraft_boards")
  from_EventDraft_boards              EventDraft[]              @relation("EventDraft_boards")
  from_EventVersion_boards            EventVersion[]            @relation("EventVersion_boards")

  @@index([ownerId])
  @@index([redirectId])
  @@index([directoryId])
  @@index([linkToAgendasId])
  @@index([linkToResolutionsId])
  @@index([linkToPublicOpinionMessageId])
}

model BoardVersion {
  id                           String             @id @default(cuid())
  original                     Board?             @relation("BoardVersion_original", fields: [originalId], references: [id])
  originalId                   String?            @map("original")
  heroImage                    String?
  title                        String             @default("")
  description                  String             @default("")
  publishAt                    DateTime?
  unpublishAt                  DateTime?
  reviewDate                   DateTime?
  owner                        User?              @relation("BoardVersion_owner", fields: [ownerId], references: [id])
  ownerId                      String?            @map("owner")
  body                         String?
  tags                         Tag[]              @relation("BoardVersion_tags")
  userGroups                   UserGroup[]        @relation("BoardVersion_userGroups")
  actions                      InternalLink[]     @relation("BoardVersion_actions")
  documents                    Document[]         @relation("BoardVersion_documents")
  contacts                     Contact[]          @relation("BoardVersion_contacts")
  redirect                     Redirect?          @relation("BoardVersion_redirect", fields: [redirectId], references: [id])
  redirectId                   String?            @map("redirect")
  events                       Event[]            @relation("BoardVersion_events")
  topics                       Topic[]            @relation("BoardVersion_topics")
  publicNotices                PublicNotice[]     @relation("BoardVersion_publicNotices")
  communities                  Community[]        @relation("BoardVersion_communities")
  orgUnits                     OrgUnit[]          @relation("BoardVersion_orgUnits")
  assemblyDistricts            AssemblyDistrict[] @relation("BoardVersion_assemblyDistricts")
  services                     Service[]          @relation("BoardVersion_services")
  createdAt                    DateTime?          @default(now())
  updatedAt                    DateTime?          @default(now()) @updatedAt
  directory                    Document?          @relation("BoardVersion_directory", fields: [directoryId], references: [id])
  directoryId                  String?            @map("directory")
  calendarId                   String             @default("")
  calendarQueryString          String             @default("")
  linkToAgendas                ExternalLink?      @relation("BoardVersion_linkToAgendas", fields: [linkToAgendasId], references: [id])
  linkToAgendasId              String?            @map("linkToAgendas")
  linkToResolutions            ExternalLink?      @relation("BoardVersion_linkToResolutions", fields: [linkToResolutionsId], references: [id])
  linkToResolutionsId          String?            @map("linkToResolutions")
  linkToPublicOpinionMessage   ExternalLink?      @relation("BoardVersion_linkToPublicOpinionMessage", fields: [linkToPublicOpinionMessageId], references: [id])
  linkToPublicOpinionMessageId String?            @map("linkToPublicOpinionMessage")
  type                         String             @default("board")
  isActive                     Boolean            @default(true)
  isLive                       Board?             @relation("Board_currentVersion")
  republish                    String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([directoryId])
  @@index([linkToAgendasId])
  @@index([linkToResolutionsId])
  @@index([linkToPublicOpinionMessageId])
}

model BoardDraft {
  id                           String             @id @default(cuid())
  original                     Board?             @relation("BoardDraft_original", fields: [originalId], references: [id])
  originalId                   String?            @map("original")
  heroImage                    String?
  title                        String             @default("")
  description                  String             @default("")
  publishAt                    DateTime?
  unpublishAt                  DateTime?
  reviewDate                   DateTime?
  owner                        User?              @relation("BoardDraft_owner", fields: [ownerId], references: [id])
  ownerId                      String?            @map("owner")
  body                         String?
  tags                         Tag[]              @relation("BoardDraft_tags")
  userGroups                   UserGroup[]        @relation("BoardDraft_userGroups")
  actions                      InternalLink[]     @relation("BoardDraft_actions")
  documents                    Document[]         @relation("BoardDraft_documents")
  contacts                     Contact[]          @relation("BoardDraft_contacts")
  redirect                     Redirect?          @relation("BoardDraft_redirect", fields: [redirectId], references: [id])
  redirectId                   String?            @map("redirect")
  events                       Event[]            @relation("BoardDraft_events")
  topics                       Topic[]            @relation("BoardDraft_topics")
  publicNotices                PublicNotice[]     @relation("BoardDraft_publicNotices")
  communities                  Community[]        @relation("BoardDraft_communities")
  orgUnits                     OrgUnit[]          @relation("BoardDraft_orgUnits")
  assemblyDistricts            AssemblyDistrict[] @relation("BoardDraft_assemblyDistricts")
  services                     Service[]          @relation("BoardDraft_services")
  createdAt                    DateTime?          @default(now())
  updatedAt                    DateTime?          @default(now()) @updatedAt
  directory                    Document?          @relation("BoardDraft_directory", fields: [directoryId], references: [id])
  directoryId                  String?            @map("directory")
  calendarId                   String             @default("")
  calendarQueryString          String             @default("")
  linkToAgendas                ExternalLink?      @relation("BoardDraft_linkToAgendas", fields: [linkToAgendasId], references: [id])
  linkToAgendasId              String?            @map("linkToAgendas")
  linkToResolutions            ExternalLink?      @relation("BoardDraft_linkToResolutions", fields: [linkToResolutionsId], references: [id])
  linkToResolutionsId          String?            @map("linkToResolutions")
  linkToPublicOpinionMessage   ExternalLink?      @relation("BoardDraft_linkToPublicOpinionMessage", fields: [linkToPublicOpinionMessageId], references: [id])
  linkToPublicOpinionMessageId String?            @map("linkToPublicOpinionMessage")
  type                         String             @default("board")
  isActive                     Boolean            @default(true)
  publish                      String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([directoryId])
  @@index([linkToAgendasId])
  @@index([linkToResolutionsId])
  @@index([linkToPublicOpinionMessageId])
}

model Community {
  id                                       String                    @id @default(cuid())
  heroImage                                String?
  title                                    String                    @unique @default("")
  description                              String                    @default("")
  publishAt                                DateTime?
  unpublishAt                              DateTime?
  reviewDate                               DateTime?
  slug                                     String                    @unique @default("")
  owner                                    User?                     @relation("Community_owner", fields: [ownerId], references: [id])
  ownerId                                  String?                   @map("owner")
  body                                     String?
  tags                                     Tag[]                     @relation("Community_tags")
  userGroups                               UserGroup[]               @relation("Community_userGroups")
  actions                                  InternalLink[]            @relation("Community_actions")
  documents                                Document[]                @relation("Community_documents")
  contacts                                 Contact[]                 @relation("Community_contacts")
  redirect                                 Redirect?                 @relation("Community_redirect", fields: [redirectId], references: [id])
  redirectId                               String?                   @map("redirect")
  events                                   Event[]                   @relation("Community_events")
  topics                                   Topic[]                   @relation("Community_topics")
  publicNotices                            PublicNotice[]            @relation("Community_publicNotices")
  communities                              Community[]               @relation("Community_communities")
  orgUnits                                 OrgUnit[]                 @relation("Community_orgUnits")
  assemblyDistricts                        AssemblyDistrict[]        @relation("AssemblyDistrict_communities")
  services                                 Service[]                 @relation("Community_services")
  createdAt                                DateTime?                 @default(now())
  updatedAt                                DateTime?                 @default(now()) @updatedAt
  boards                                   Board[]                   @relation("Board_communities")
  facilities                               Facility[]                @relation("Community_facilities")
  parks                                    Park[]                    @relation("Community_parks")
  trails                                   Trail[]                   @relation("Community_trails")
  plans                                    Plan[]                    @relation("Community_plans")
  status                                   String                    @default("unpublished")
  drafts                                   CommunityDraft[]          @relation("CommunityDraft_original")
  makeDrafts                               String?
  versions                                 CommunityVersion[]        @relation("CommunityVersion_original")
  currentVersion                           CommunityVersion?         @relation("Community_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                         String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_communities AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_communities")
  from_AssemblyDistrictDraft_communities   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_communities")
  from_BoardVersion_communities            BoardVersion[]            @relation("BoardVersion_communities")
  from_BoardDraft_communities              BoardDraft[]              @relation("BoardDraft_communities")
  from_Community_communities               Community[]               @relation("Community_communities")
  from_CommunityVersion_communities        CommunityVersion[]        @relation("CommunityVersion_communities")
  from_CommunityDraft_communities          CommunityDraft[]          @relation("CommunityDraft_communities")
  from_FacilityVersion_communities         FacilityVersion[]         @relation("FacilityVersion_communities")
  from_FacilityDraft_communities           FacilityDraft[]           @relation("FacilityDraft_communities")
  from_OrgUnitVersion_communities          OrgUnitVersion[]          @relation("OrgUnitVersion_communities")
  from_OrgUnitDraft_communities            OrgUnitDraft[]            @relation("OrgUnitDraft_communities")
  from_ParkVersion_communities             ParkVersion[]             @relation("ParkVersion_communities")
  from_ParkDraft_communities               ParkDraft[]               @relation("ParkDraft_communities")
  from_PublicNoticeVersion_communities     PublicNoticeVersion[]     @relation("PublicNoticeVersion_communities")
  from_PublicNoticeDraft_communities       PublicNoticeDraft[]       @relation("PublicNoticeDraft_communities")
  from_ServiceVersion_communities          ServiceVersion[]          @relation("ServiceVersion_communities")
  from_ServiceDraft_communities            ServiceDraft[]            @relation("ServiceDraft_communities")
  from_TopicVersion_communities            TopicVersion[]            @relation("TopicVersion_communities")
  from_TopicDraft_communities              TopicDraft[]              @relation("TopicDraft_communities")
  from_TrailVersion_communities            TrailVersion[]            @relation("TrailVersion_communities")
  from_TrailDraft_communities              TrailDraft[]              @relation("TrailDraft_communities")
  from_PlanVersion_communities             PlanVersion[]             @relation("PlanVersion_communities")
  from_PlanDraft_communities               PlanDraft[]               @relation("PlanDraft_communities")
  from_EventDraft_communities              EventDraft[]              @relation("EventDraft_communities")
  from_EventVersion_communities            EventVersion[]            @relation("EventVersion_communities")

  @@index([ownerId])
  @@index([redirectId])
}

model CommunityVersion {
  id                String             @id @default(cuid())
  original          Community?         @relation("CommunityVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("CommunityVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("CommunityVersion_tags")
  userGroups        UserGroup[]        @relation("CommunityVersion_userGroups")
  actions           InternalLink[]     @relation("CommunityVersion_actions")
  documents         Document[]         @relation("CommunityVersion_documents")
  contacts          Contact[]          @relation("CommunityVersion_contacts")
  redirect          Redirect?          @relation("CommunityVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("CommunityVersion_events")
  topics            Topic[]            @relation("CommunityVersion_topics")
  publicNotices     PublicNotice[]     @relation("CommunityVersion_publicNotices")
  communities       Community[]        @relation("CommunityVersion_communities")
  orgUnits          OrgUnit[]          @relation("CommunityVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("CommunityVersion_assemblyDistricts")
  services          Service[]          @relation("CommunityVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  boards            Board[]            @relation("CommunityVersion_boards")
  facilities        Facility[]         @relation("CommunityVersion_facilities")
  parks             Park[]             @relation("CommunityVersion_parks")
  trails            Trail[]            @relation("CommunityVersion_trails")
  plans             Plan[]             @relation("CommunityVersion_plans")
  isLive            Community?         @relation("Community_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model CommunityDraft {
  id                String             @id @default(cuid())
  original          Community?         @relation("CommunityDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("CommunityDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("CommunityDraft_tags")
  userGroups        UserGroup[]        @relation("CommunityDraft_userGroups")
  actions           InternalLink[]     @relation("CommunityDraft_actions")
  documents         Document[]         @relation("CommunityDraft_documents")
  contacts          Contact[]          @relation("CommunityDraft_contacts")
  redirect          Redirect?          @relation("CommunityDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("CommunityDraft_events")
  topics            Topic[]            @relation("CommunityDraft_topics")
  publicNotices     PublicNotice[]     @relation("CommunityDraft_publicNotices")
  communities       Community[]        @relation("CommunityDraft_communities")
  orgUnits          OrgUnit[]          @relation("CommunityDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("CommunityDraft_assemblyDistricts")
  services          Service[]          @relation("CommunityDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  boards            Board[]            @relation("CommunityDraft_boards")
  facilities        Facility[]         @relation("CommunityDraft_facilities")
  parks             Park[]             @relation("CommunityDraft_parks")
  trails            Trail[]            @relation("CommunityDraft_trails")
  plans             Plan[]             @relation("CommunityDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model Facility {
  id                                      String                    @id @default(cuid())
  heroImage                               String?
  title                                   String                    @unique @default("")
  description                             String                    @default("")
  publishAt                               DateTime?
  unpublishAt                             DateTime?
  reviewDate                              DateTime?
  slug                                    String                    @unique @default("")
  owner                                   User?                     @relation("Facility_owner", fields: [ownerId], references: [id])
  ownerId                                 String?                   @map("owner")
  body                                    String?
  tags                                    Tag[]                     @relation("Facility_tags")
  userGroups                              UserGroup[]               @relation("Facility_userGroups")
  actions                                 InternalLink[]            @relation("Facility_actions")
  documents                               Document[]                @relation("Facility_documents")
  address                                 Location?                 @relation("Facility_address", fields: [addressId], references: [id])
  addressId                               String?                   @map("address")
  contacts                                Contact[]                 @relation("Facility_contacts")
  hours                                   OperatingHour[]           @relation("Facility_hours")
  redirect                                Redirect?                 @relation("Facility_redirect", fields: [redirectId], references: [id])
  redirectId                              String?                   @map("redirect")
  events                                  Event[]                   @relation("Event_facilities")
  topics                                  Topic[]                   @relation("Facility_topics")
  publicNotices                           PublicNotice[]            @relation("Facility_publicNotices")
  communities                             Community[]               @relation("Community_facilities")
  orgUnits                                OrgUnit[]                 @relation("Facility_orgUnits")
  assemblyDistricts                       AssemblyDistrict[]        @relation("AssemblyDistrict_facilities")
  services                                Service[]                 @relation("Facility_services")
  createdAt                               DateTime?                 @default(now())
  updatedAt                               DateTime?                 @default(now()) @updatedAt
  park                                    Park?                     @relation("Facility_park", fields: [parkId], references: [id])
  parkId                                  String?                   @map("park")
  status                                  String                    @default("unpublished")
  drafts                                  FacilityDraft[]           @relation("FacilityDraft_original")
  makeDrafts                              String?
  versions                                FacilityVersion[]         @relation("FacilityVersion_original")
  currentVersion                          FacilityVersion?          @relation("Facility_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                        String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_facilities AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_facilities")
  from_AssemblyDistrictDraft_facilities   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_facilities")
  from_CommunityVersion_facilities        CommunityVersion[]        @relation("CommunityVersion_facilities")
  from_CommunityDraft_facilities          CommunityDraft[]          @relation("CommunityDraft_facilities")
  from_OrgUnitVersion_facilities          OrgUnitVersion[]          @relation("OrgUnitVersion_facilities")
  from_OrgUnitDraft_facilities            OrgUnitDraft[]            @relation("OrgUnitDraft_facilities")
  from_ParkVersion_facilities             ParkVersion[]             @relation("ParkVersion_facilities")
  from_ParkDraft_facilities               ParkDraft[]               @relation("ParkDraft_facilities")
  from_PublicNoticeVersion_facilities     PublicNoticeVersion[]     @relation("PublicNoticeVersion_facilities")
  from_PublicNoticeDraft_facilities       PublicNoticeDraft[]       @relation("PublicNoticeDraft_facilities")
  from_ServiceVersion_facilities          ServiceVersion[]          @relation("ServiceVersion_facilities")
  from_ServiceDraft_facilities            ServiceDraft[]            @relation("ServiceDraft_facilities")
  from_TopicVersion_facilities            TopicVersion[]            @relation("TopicVersion_facilities")
  from_TopicDraft_facilities              TopicDraft[]              @relation("TopicDraft_facilities")
  from_EventDraft_facilities              EventDraft[]              @relation("EventDraft_facilities")
  from_EventVersion_facilities            EventVersion[]            @relation("EventVersion_facilities")
  from_FacilityListItem_facility          FacilityListItem[]        @relation("FacilityListItem_facility")

  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model FacilityVersion {
  id                String             @id @default(cuid())
  original          Facility?          @relation("FacilityVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("FacilityVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("FacilityVersion_tags")
  userGroups        UserGroup[]        @relation("FacilityVersion_userGroups")
  actions           InternalLink[]     @relation("FacilityVersion_actions")
  documents         Document[]         @relation("FacilityVersion_documents")
  address           Location?          @relation("FacilityVersion_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("FacilityVersion_contacts")
  hours             OperatingHour[]    @relation("FacilityVersion_hours")
  redirect          Redirect?          @relation("FacilityVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("FacilityVersion_events")
  topics            Topic[]            @relation("FacilityVersion_topics")
  publicNotices     PublicNotice[]     @relation("FacilityVersion_publicNotices")
  communities       Community[]        @relation("FacilityVersion_communities")
  orgUnits          OrgUnit[]          @relation("FacilityVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("FacilityVersion_assemblyDistricts")
  services          Service[]          @relation("FacilityVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  park              Park?              @relation("FacilityVersion_park", fields: [parkId], references: [id])
  parkId            String?            @map("park")
  isLive            Facility?          @relation("Facility_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model FacilityDraft {
  id                String             @id @default(cuid())
  original          Facility?          @relation("FacilityDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("FacilityDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("FacilityDraft_tags")
  userGroups        UserGroup[]        @relation("FacilityDraft_userGroups")
  actions           InternalLink[]     @relation("FacilityDraft_actions")
  documents         Document[]         @relation("FacilityDraft_documents")
  address           Location?          @relation("FacilityDraft_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("FacilityDraft_contacts")
  hours             OperatingHour[]    @relation("FacilityDraft_hours")
  redirect          Redirect?          @relation("FacilityDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("FacilityDraft_events")
  topics            Topic[]            @relation("FacilityDraft_topics")
  publicNotices     PublicNotice[]     @relation("FacilityDraft_publicNotices")
  communities       Community[]        @relation("FacilityDraft_communities")
  orgUnits          OrgUnit[]          @relation("FacilityDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("FacilityDraft_assemblyDistricts")
  services          Service[]          @relation("FacilityDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  park              Park?              @relation("FacilityDraft_park", fields: [parkId], references: [id])
  parkId            String?            @map("park")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model OrgUnit {
  id                                    String                    @id @default(cuid())
  heroImage                             String?
  title                                 String                    @unique @default("")
  description                           String                    @default("")
  publishAt                             DateTime?
  unpublishAt                           DateTime?
  reviewDate                            DateTime?
  slug                                  String                    @unique @default("")
  owner                                 User?                     @relation("OrgUnit_owner", fields: [ownerId], references: [id])
  ownerId                               String?                   @map("owner")
  body                                  String?
  tags                                  Tag[]                     @relation("OrgUnit_tags")
  userGroups                            UserGroup[]               @relation("OrgUnit_userGroups")
  actions                               InternalLink[]            @relation("OrgUnit_actions")
  documents                             Document[]                @relation("OrgUnit_documents")
  contacts                              Contact[]                 @relation("OrgUnit_contacts")
  redirect                              Redirect?                 @relation("OrgUnit_redirect", fields: [redirectId], references: [id])
  redirectId                            String?                   @map("redirect")
  events                                Event[]                   @relation("Event_orgUnits")
  topics                                Topic[]                   @relation("OrgUnit_topics")
  publicNotices                         PublicNotice[]            @relation("OrgUnit_publicNotices")
  communities                           Community[]               @relation("Community_orgUnits")
  orgUnits                              OrgUnit[]                 @relation("OrgUnit_orgUnits")
  assemblyDistricts                     AssemblyDistrict[]        @relation("AssemblyDistrict_orgUnits")
  services                              Service[]                 @relation("OrgUnit_services")
  createdAt                             DateTime?                 @default(now())
  updatedAt                             DateTime?                 @default(now()) @updatedAt
  showPage                              Boolean                   @default(true)
  children                              OrgUnit[]                 @relation("OrgUnit_parent")
  parent                                OrgUnit?                  @relation("OrgUnit_parent", fields: [parentId], references: [id])
  parentId                              String?                   @map("parent")
  boards                                Board[]                   @relation("Board_orgUnits")
  facilities                            Facility[]                @relation("Facility_orgUnits")
  parks                                 Park[]                    @relation("OrgUnit_parks")
  trails                                Trail[]                   @relation("OrgUnit_trails")
  plans                                 Plan[]                    @relation("OrgUnit_plans")
  status                                String                    @default("unpublished")
  drafts                                OrgUnitDraft[]            @relation("OrgUnitDraft_original")
  makeDrafts                            String?
  versions                              OrgUnitVersion[]          @relation("OrgUnitVersion_original")
  currentVersion                        OrgUnitVersion?           @relation("OrgUnit_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                      String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_orgUnits AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_orgUnits")
  from_AssemblyDistrictDraft_orgUnits   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_orgUnits")
  from_BoardVersion_orgUnits            BoardVersion[]            @relation("BoardVersion_orgUnits")
  from_BoardDraft_orgUnits              BoardDraft[]              @relation("BoardDraft_orgUnits")
  from_CommunityVersion_orgUnits        CommunityVersion[]        @relation("CommunityVersion_orgUnits")
  from_CommunityDraft_orgUnits          CommunityDraft[]          @relation("CommunityDraft_orgUnits")
  from_FacilityVersion_orgUnits         FacilityVersion[]         @relation("FacilityVersion_orgUnits")
  from_FacilityDraft_orgUnits           FacilityDraft[]           @relation("FacilityDraft_orgUnits")
  from_OrgUnit_orgUnits                 OrgUnit[]                 @relation("OrgUnit_orgUnits")
  from_OrgUnitVersion_orgUnits          OrgUnitVersion[]          @relation("OrgUnitVersion_orgUnits")
  from_OrgUnitVersion_children          OrgUnitVersion[]          @relation("OrgUnitVersion_children")
  from_OrgUnitVersion_parent            OrgUnitVersion[]          @relation("OrgUnitVersion_parent")
  from_OrgUnitDraft_orgUnits            OrgUnitDraft[]            @relation("OrgUnitDraft_orgUnits")
  from_OrgUnitDraft_children            OrgUnitDraft[]            @relation("OrgUnitDraft_children")
  from_OrgUnitDraft_parent              OrgUnitDraft[]            @relation("OrgUnitDraft_parent")
  from_ParkVersion_orgUnits             ParkVersion[]             @relation("ParkVersion_orgUnits")
  from_ParkDraft_orgUnits               ParkDraft[]               @relation("ParkDraft_orgUnits")
  from_PublicNoticeVersion_orgUnits     PublicNoticeVersion[]     @relation("PublicNoticeVersion_orgUnits")
  from_PublicNoticeDraft_orgUnits       PublicNoticeDraft[]       @relation("PublicNoticeDraft_orgUnits")
  from_ServiceVersion_orgUnits          ServiceVersion[]          @relation("ServiceVersion_orgUnits")
  from_ServiceDraft_orgUnits            ServiceDraft[]            @relation("ServiceDraft_orgUnits")
  from_TopicVersion_orgUnits            TopicVersion[]            @relation("TopicVersion_orgUnits")
  from_TopicDraft_orgUnits              TopicDraft[]              @relation("TopicDraft_orgUnits")
  from_TrailVersion_orgUnits            TrailVersion[]            @relation("TrailVersion_orgUnits")
  from_TrailDraft_orgUnits              TrailDraft[]              @relation("TrailDraft_orgUnits")
  from_PlanVersion_orgUnits             PlanVersion[]             @relation("PlanVersion_orgUnits")
  from_PlanDraft_orgUnits               PlanDraft[]               @relation("PlanDraft_orgUnits")
  from_EventDraft_orgUnits              EventDraft[]              @relation("EventDraft_orgUnits")
  from_EventVersion_orgUnits            EventVersion[]            @relation("EventVersion_orgUnits")

  @@index([ownerId])
  @@index([redirectId])
  @@index([parentId])
}

model OrgUnitVersion {
  id                String             @id @default(cuid())
  original          OrgUnit?           @relation("OrgUnitVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("OrgUnitVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("OrgUnitVersion_tags")
  userGroups        UserGroup[]        @relation("OrgUnitVersion_userGroups")
  actions           InternalLink[]     @relation("OrgUnitVersion_actions")
  documents         Document[]         @relation("OrgUnitVersion_documents")
  contacts          Contact[]          @relation("OrgUnitVersion_contacts")
  redirect          Redirect?          @relation("OrgUnitVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("OrgUnitVersion_events")
  topics            Topic[]            @relation("OrgUnitVersion_topics")
  publicNotices     PublicNotice[]     @relation("OrgUnitVersion_publicNotices")
  communities       Community[]        @relation("OrgUnitVersion_communities")
  orgUnits          OrgUnit[]          @relation("OrgUnitVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("OrgUnitVersion_assemblyDistricts")
  services          Service[]          @relation("OrgUnitVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  showPage          Boolean            @default(true)
  children          OrgUnit[]          @relation("OrgUnitVersion_children")
  parent            OrgUnit?           @relation("OrgUnitVersion_parent", fields: [parentId], references: [id])
  parentId          String?            @map("parent")
  boards            Board[]            @relation("OrgUnitVersion_boards")
  facilities        Facility[]         @relation("OrgUnitVersion_facilities")
  parks             Park[]             @relation("OrgUnitVersion_parks")
  trails            Trail[]            @relation("OrgUnitVersion_trails")
  plans             Plan[]             @relation("OrgUnitVersion_plans")
  isLive            OrgUnit?           @relation("OrgUnit_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([parentId])
}

model OrgUnitDraft {
  id                String             @id @default(cuid())
  original          OrgUnit?           @relation("OrgUnitDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("OrgUnitDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("OrgUnitDraft_tags")
  userGroups        UserGroup[]        @relation("OrgUnitDraft_userGroups")
  actions           InternalLink[]     @relation("OrgUnitDraft_actions")
  documents         Document[]         @relation("OrgUnitDraft_documents")
  contacts          Contact[]          @relation("OrgUnitDraft_contacts")
  redirect          Redirect?          @relation("OrgUnitDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("OrgUnitDraft_events")
  topics            Topic[]            @relation("OrgUnitDraft_topics")
  publicNotices     PublicNotice[]     @relation("OrgUnitDraft_publicNotices")
  communities       Community[]        @relation("OrgUnitDraft_communities")
  orgUnits          OrgUnit[]          @relation("OrgUnitDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("OrgUnitDraft_assemblyDistricts")
  services          Service[]          @relation("OrgUnitDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  showPage          Boolean            @default(true)
  children          OrgUnit[]          @relation("OrgUnitDraft_children")
  parent            OrgUnit?           @relation("OrgUnitDraft_parent", fields: [parentId], references: [id])
  parentId          String?            @map("parent")
  boards            Board[]            @relation("OrgUnitDraft_boards")
  facilities        Facility[]         @relation("OrgUnitDraft_facilities")
  parks             Park[]             @relation("OrgUnitDraft_parks")
  trails            Trail[]            @relation("OrgUnitDraft_trails")
  plans             Plan[]             @relation("OrgUnitDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([parentId])
}

model Park {
  id                                 String                    @id @default(cuid())
  heroImage                          String?
  title                              String                    @unique @default("")
  description                        String                    @default("")
  publishAt                          DateTime?
  unpublishAt                        DateTime?
  reviewDate                         DateTime?
  slug                               String                    @unique @default("")
  owner                              User?                     @relation("Park_owner", fields: [ownerId], references: [id])
  ownerId                            String?                   @map("owner")
  body                               String?
  tags                               Tag[]                     @relation("Park_tags")
  userGroups                         UserGroup[]               @relation("Park_userGroups")
  actions                            InternalLink[]            @relation("Park_actions")
  documents                          Document[]                @relation("Park_documents")
  address                            Location?                 @relation("Park_address", fields: [addressId], references: [id])
  addressId                          String?                   @map("address")
  contacts                           Contact[]                 @relation("Park_contacts")
  hours                              OperatingHour[]           @relation("Park_hours")
  redirect                           Redirect?                 @relation("Park_redirect", fields: [redirectId], references: [id])
  redirectId                         String?                   @map("redirect")
  events                             Event[]                   @relation("Event_parks")
  topics                             Topic[]                   @relation("Park_topics")
  publicNotices                      PublicNotice[]            @relation("Park_publicNotices")
  communities                        Community[]               @relation("Community_parks")
  orgUnits                           OrgUnit[]                 @relation("OrgUnit_parks")
  assemblyDistricts                  AssemblyDistrict[]        @relation("AssemblyDistrict_parks")
  services                           Service[]                 @relation("Park_services")
  createdAt                          DateTime?                 @default(now())
  updatedAt                          DateTime?                 @default(now()) @updatedAt
  trails                             Trail[]                   @relation("Trail_park")
  facilities                         Facility[]                @relation("Facility_park")
  status                             String                    @default("unpublished")
  drafts                             ParkDraft[]               @relation("ParkDraft_original")
  makeDrafts                         String?
  versions                           ParkVersion[]             @relation("ParkVersion_original")
  currentVersion                     ParkVersion?              @relation("Park_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                   String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_parks AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_parks")
  from_AssemblyDistrictDraft_parks   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_parks")
  from_CommunityVersion_parks        CommunityVersion[]        @relation("CommunityVersion_parks")
  from_CommunityDraft_parks          CommunityDraft[]          @relation("CommunityDraft_parks")
  from_FacilityVersion_park          FacilityVersion[]         @relation("FacilityVersion_park")
  from_FacilityDraft_park            FacilityDraft[]           @relation("FacilityDraft_park")
  from_OrgUnitVersion_parks          OrgUnitVersion[]          @relation("OrgUnitVersion_parks")
  from_OrgUnitDraft_parks            OrgUnitDraft[]            @relation("OrgUnitDraft_parks")
  from_PublicNoticeVersion_parks     PublicNoticeVersion[]     @relation("PublicNoticeVersion_parks")
  from_PublicNoticeDraft_parks       PublicNoticeDraft[]       @relation("PublicNoticeDraft_parks")
  from_ServiceVersion_parks          ServiceVersion[]          @relation("ServiceVersion_parks")
  from_ServiceDraft_parks            ServiceDraft[]            @relation("ServiceDraft_parks")
  from_TopicVersion_parks            TopicVersion[]            @relation("TopicVersion_parks")
  from_TopicDraft_parks              TopicDraft[]              @relation("TopicDraft_parks")
  from_TrailVersion_park             TrailVersion[]            @relation("TrailVersion_park")
  from_TrailDraft_park               TrailDraft[]              @relation("TrailDraft_park")
  from_EventDraft_parks              EventDraft[]              @relation("EventDraft_parks")
  from_EventVersion_parks            EventVersion[]            @relation("EventVersion_parks")

  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
}

model ParkVersion {
  id                String             @id @default(cuid())
  original          Park?              @relation("ParkVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("ParkVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("ParkVersion_tags")
  userGroups        UserGroup[]        @relation("ParkVersion_userGroups")
  actions           InternalLink[]     @relation("ParkVersion_actions")
  documents         Document[]         @relation("ParkVersion_documents")
  address           Location?          @relation("ParkVersion_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("ParkVersion_contacts")
  hours             OperatingHour[]    @relation("ParkVersion_hours")
  redirect          Redirect?          @relation("ParkVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("ParkVersion_events")
  topics            Topic[]            @relation("ParkVersion_topics")
  publicNotices     PublicNotice[]     @relation("ParkVersion_publicNotices")
  communities       Community[]        @relation("ParkVersion_communities")
  orgUnits          OrgUnit[]          @relation("ParkVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("ParkVersion_assemblyDistricts")
  services          Service[]          @relation("ParkVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  trails            Trail[]            @relation("ParkVersion_trails")
  facilities        Facility[]         @relation("ParkVersion_facilities")
  isLive            Park?              @relation("Park_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
}

model ParkDraft {
  id                String             @id @default(cuid())
  original          Park?              @relation("ParkDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("ParkDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("ParkDraft_tags")
  userGroups        UserGroup[]        @relation("ParkDraft_userGroups")
  actions           InternalLink[]     @relation("ParkDraft_actions")
  documents         Document[]         @relation("ParkDraft_documents")
  address           Location?          @relation("ParkDraft_address", fields: [addressId], references: [id])
  addressId         String?            @map("address")
  contacts          Contact[]          @relation("ParkDraft_contacts")
  hours             OperatingHour[]    @relation("ParkDraft_hours")
  redirect          Redirect?          @relation("ParkDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("ParkDraft_events")
  topics            Topic[]            @relation("ParkDraft_topics")
  publicNotices     PublicNotice[]     @relation("ParkDraft_publicNotices")
  communities       Community[]        @relation("ParkDraft_communities")
  orgUnits          OrgUnit[]          @relation("ParkDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("ParkDraft_assemblyDistricts")
  services          Service[]          @relation("ParkDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  trails            Trail[]            @relation("ParkDraft_trails")
  facilities        Facility[]         @relation("ParkDraft_facilities")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
}

model PublicNotice {
  id                                         String                    @id @default(cuid())
  heroImage                                  String?
  title                                      String                    @unique @default("")
  description                                String                    @default("")
  publishAt                                  DateTime?
  unpublishAt                                DateTime?
  reviewDate                                 DateTime?
  slug                                       String                    @unique @default("")
  owner                                      User?                     @relation("PublicNotice_owner", fields: [ownerId], references: [id])
  ownerId                                    String?                   @map("owner")
  body                                       String?
  tags                                       Tag[]                     @relation("PublicNotice_tags")
  userGroups                                 UserGroup[]               @relation("PublicNotice_userGroups")
  actions                                    InternalLink[]            @relation("PublicNotice_actions")
  documents                                  Document[]                @relation("PublicNotice_documents")
  contacts                                   Contact[]                 @relation("PublicNotice_contacts")
  redirect                                   Redirect?                 @relation("PublicNotice_redirect", fields: [redirectId], references: [id])
  redirectId                                 String?                   @map("redirect")
  events                                     Event[]                   @relation("Event_publicNotices")
  topics                                     Topic[]                   @relation("PublicNotice_topics")
  publicNotices                              PublicNotice[]            @relation("PublicNotice_publicNotices")
  communities                                Community[]               @relation("Community_publicNotices")
  orgUnits                                   OrgUnit[]                 @relation("OrgUnit_publicNotices")
  assemblyDistricts                          AssemblyDistrict[]        @relation("AssemblyDistrict_publicNotices")
  services                                   Service[]                 @relation("PublicNotice_services")
  createdAt                                  DateTime?                 @default(now())
  updatedAt                                  DateTime?                 @default(now()) @updatedAt
  urgency                                    Int                       @default(2)
  effectiveDate                              DateTime?
  endDate                                    DateTime?
  parks                                      Park[]                    @relation("Park_publicNotices")
  facilities                                 Facility[]                @relation("Facility_publicNotices")
  trails                                     Trail[]                   @relation("PublicNotice_trails")
  boards                                     Board[]                   @relation("Board_publicNotices")
  plans                                      Plan[]                    @relation("Plan_publicNotices")
  status                                     String                    @default("unpublished")
  drafts                                     PublicNoticeDraft[]       @relation("PublicNoticeDraft_original")
  makeDrafts                                 String?
  versions                                   PublicNoticeVersion[]     @relation("PublicNoticeVersion_original")
  currentVersion                             PublicNoticeVersion?      @relation("PublicNotice_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                           String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_publicNotices AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_publicNotices")
  from_AssemblyDistrictDraft_publicNotices   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_publicNotices")
  from_BoardVersion_publicNotices            BoardVersion[]            @relation("BoardVersion_publicNotices")
  from_BoardDraft_publicNotices              BoardDraft[]              @relation("BoardDraft_publicNotices")
  from_CommunityVersion_publicNotices        CommunityVersion[]        @relation("CommunityVersion_publicNotices")
  from_CommunityDraft_publicNotices          CommunityDraft[]          @relation("CommunityDraft_publicNotices")
  from_FacilityVersion_publicNotices         FacilityVersion[]         @relation("FacilityVersion_publicNotices")
  from_FacilityDraft_publicNotices           FacilityDraft[]           @relation("FacilityDraft_publicNotices")
  from_OrgUnitVersion_publicNotices          OrgUnitVersion[]          @relation("OrgUnitVersion_publicNotices")
  from_OrgUnitDraft_publicNotices            OrgUnitDraft[]            @relation("OrgUnitDraft_publicNotices")
  from_ParkVersion_publicNotices             ParkVersion[]             @relation("ParkVersion_publicNotices")
  from_ParkDraft_publicNotices               ParkDraft[]               @relation("ParkDraft_publicNotices")
  from_PublicNotice_publicNotices            PublicNotice[]            @relation("PublicNotice_publicNotices")
  from_PublicNoticeVersion_publicNotices     PublicNoticeVersion[]     @relation("PublicNoticeVersion_publicNotices")
  from_PublicNoticeDraft_publicNotices       PublicNoticeDraft[]       @relation("PublicNoticeDraft_publicNotices")
  from_ServiceVersion_publicNotices          ServiceVersion[]          @relation("ServiceVersion_publicNotices")
  from_ServiceDraft_publicNotices            ServiceDraft[]            @relation("ServiceDraft_publicNotices")
  from_TopicVersion_publicNotices            TopicVersion[]            @relation("TopicVersion_publicNotices")
  from_TopicDraft_publicNotices              TopicDraft[]              @relation("TopicDraft_publicNotices")
  from_TrailVersion_publicNotices            TrailVersion[]            @relation("TrailVersion_publicNotices")
  from_TrailDraft_publicNotices              TrailDraft[]              @relation("TrailDraft_publicNotices")
  from_PlanVersion_publicNotices             PlanVersion[]             @relation("PlanVersion_publicNotices")
  from_PlanDraft_publicNotices               PlanDraft[]               @relation("PlanDraft_publicNotices")
  from_EventDraft_publicNotices              EventDraft[]              @relation("EventDraft_publicNotices")
  from_EventVersion_publicNotices            EventVersion[]            @relation("EventVersion_publicNotices")

  @@index([ownerId])
  @@index([redirectId])
}

model PublicNoticeVersion {
  id                String             @id @default(cuid())
  original          PublicNotice?      @relation("PublicNoticeVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("PublicNoticeVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("PublicNoticeVersion_tags")
  userGroups        UserGroup[]        @relation("PublicNoticeVersion_userGroups")
  actions           InternalLink[]     @relation("PublicNoticeVersion_actions")
  documents         Document[]         @relation("PublicNoticeVersion_documents")
  contacts          Contact[]          @relation("PublicNoticeVersion_contacts")
  redirect          Redirect?          @relation("PublicNoticeVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("PublicNoticeVersion_events")
  topics            Topic[]            @relation("PublicNoticeVersion_topics")
  publicNotices     PublicNotice[]     @relation("PublicNoticeVersion_publicNotices")
  communities       Community[]        @relation("PublicNoticeVersion_communities")
  orgUnits          OrgUnit[]          @relation("PublicNoticeVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("PublicNoticeVersion_assemblyDistricts")
  services          Service[]          @relation("PublicNoticeVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  urgency           Int                @default(2)
  effectiveDate     DateTime?
  endDate           DateTime?
  parks             Park[]             @relation("PublicNoticeVersion_parks")
  facilities        Facility[]         @relation("PublicNoticeVersion_facilities")
  trails            Trail[]            @relation("PublicNoticeVersion_trails")
  boards            Board[]            @relation("PublicNoticeVersion_boards")
  plans             Plan[]             @relation("PublicNoticeVersion_plans")
  isLive            PublicNotice?      @relation("PublicNotice_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model PublicNoticeDraft {
  id                String             @id @default(cuid())
  original          PublicNotice?      @relation("PublicNoticeDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("PublicNoticeDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("PublicNoticeDraft_tags")
  userGroups        UserGroup[]        @relation("PublicNoticeDraft_userGroups")
  actions           InternalLink[]     @relation("PublicNoticeDraft_actions")
  documents         Document[]         @relation("PublicNoticeDraft_documents")
  contacts          Contact[]          @relation("PublicNoticeDraft_contacts")
  redirect          Redirect?          @relation("PublicNoticeDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("PublicNoticeDraft_events")
  topics            Topic[]            @relation("PublicNoticeDraft_topics")
  publicNotices     PublicNotice[]     @relation("PublicNoticeDraft_publicNotices")
  communities       Community[]        @relation("PublicNoticeDraft_communities")
  orgUnits          OrgUnit[]          @relation("PublicNoticeDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("PublicNoticeDraft_assemblyDistricts")
  services          Service[]          @relation("PublicNoticeDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  urgency           Int                @default(2)
  effectiveDate     DateTime?
  endDate           DateTime?
  parks             Park[]             @relation("PublicNoticeDraft_parks")
  facilities        Facility[]         @relation("PublicNoticeDraft_facilities")
  trails            Trail[]            @relation("PublicNoticeDraft_trails")
  boards            Board[]            @relation("PublicNoticeDraft_boards")
  plans             Plan[]             @relation("PublicNoticeDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model Service {
  id                                    String                    @id @default(cuid())
  heroImage                             String?
  title                                 String                    @unique @default("")
  description                           String                    @default("")
  publishAt                             DateTime?
  unpublishAt                           DateTime?
  reviewDate                            DateTime?
  slug                                  String                    @unique @default("")
  owner                                 User?                     @relation("Service_owner", fields: [ownerId], references: [id])
  ownerId                               String?                   @map("owner")
  body                                  String?
  tags                                  Tag[]                     @relation("Service_tags")
  userGroups                            UserGroup[]               @relation("Service_userGroups")
  primaryAction                         ExternalLink?             @relation("Service_primaryAction", fields: [primaryActionId], references: [id])
  primaryActionId                       String?                   @map("primaryAction")
  secondaryActions                      ExternalLink[]            @relation("Service_secondaryActions")
  documents                             Document[]                @relation("Service_documents")
  primaryContact                        Contact?                  @relation("Service_primaryContact", fields: [primaryContactId], references: [id])
  primaryContactId                      String?                   @map("primaryContact")
  contacts                              Contact[]                 @relation("Service_contacts")
  redirect                              Redirect?                 @relation("Service_redirect", fields: [redirectId], references: [id])
  redirectId                            String?                   @map("redirect")
  events                                Event[]                   @relation("Event_services")
  topics                                Topic[]                   @relation("Service_topics")
  publicNotices                         PublicNotice[]            @relation("PublicNotice_services")
  communities                           Community[]               @relation("Community_services")
  orgUnits                              OrgUnit[]                 @relation("OrgUnit_services")
  assemblyDistricts                     AssemblyDistrict[]        @relation("AssemblyDistrict_services")
  services                              Service[]                 @relation("Service_services")
  createdAt                             DateTime?                 @default(now())
  updatedAt                             DateTime?                 @default(now()) @updatedAt
  trails                                Trail[]                   @relation("Service_trails")
  parks                                 Park[]                    @relation("Park_services")
  facilities                            Facility[]                @relation("Facility_services")
  boards                                Board[]                   @relation("Board_services")
  plans                                 Plan[]                    @relation("Plan_services")
  editorNotes                           String                    @default("")
  status                                String                    @default("unpublished")
  drafts                                ServiceDraft[]            @relation("ServiceDraft_original")
  makeDrafts                            String?
  versions                              ServiceVersion[]          @relation("ServiceVersion_original")
  currentVersion                        ServiceVersion?           @relation("Service_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                      String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_services AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_services")
  from_AssemblyDistrictDraft_services   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_services")
  from_BoardVersion_services            BoardVersion[]            @relation("BoardVersion_services")
  from_BoardDraft_services              BoardDraft[]              @relation("BoardDraft_services")
  from_CommunityVersion_services        CommunityVersion[]        @relation("CommunityVersion_services")
  from_CommunityDraft_services          CommunityDraft[]          @relation("CommunityDraft_services")
  from_FacilityVersion_services         FacilityVersion[]         @relation("FacilityVersion_services")
  from_FacilityDraft_services           FacilityDraft[]           @relation("FacilityDraft_services")
  from_OrgUnitVersion_services          OrgUnitVersion[]          @relation("OrgUnitVersion_services")
  from_OrgUnitDraft_services            OrgUnitDraft[]            @relation("OrgUnitDraft_services")
  from_ParkVersion_services             ParkVersion[]             @relation("ParkVersion_services")
  from_ParkDraft_services               ParkDraft[]               @relation("ParkDraft_services")
  from_PublicNoticeVersion_services     PublicNoticeVersion[]     @relation("PublicNoticeVersion_services")
  from_PublicNoticeDraft_services       PublicNoticeDraft[]       @relation("PublicNoticeDraft_services")
  from_Service_services                 Service[]                 @relation("Service_services")
  from_ServiceVersion_services          ServiceVersion[]          @relation("ServiceVersion_services")
  from_ServiceDraft_services            ServiceDraft[]            @relation("ServiceDraft_services")
  from_TopicVersion_services            TopicVersion[]            @relation("TopicVersion_services")
  from_TopicDraft_services              TopicDraft[]              @relation("TopicDraft_services")
  from_TrailVersion_services            TrailVersion[]            @relation("TrailVersion_services")
  from_TrailDraft_services              TrailDraft[]              @relation("TrailDraft_services")
  from_PlanVersion_services             PlanVersion[]             @relation("PlanVersion_services")
  from_PlanDraft_services               PlanDraft[]               @relation("PlanDraft_services")
  from_EventDraft_services              EventDraft[]              @relation("EventDraft_services")
  from_EventVersion_services            EventVersion[]            @relation("EventVersion_services")

  @@index([ownerId])
  @@index([primaryActionId])
  @@index([primaryContactId])
  @@index([redirectId])
}

model ServiceVersion {
  id                String             @id @default(cuid())
  original          Service?           @relation("ServiceVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("ServiceVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("ServiceVersion_tags")
  userGroups        UserGroup[]        @relation("ServiceVersion_userGroups")
  primaryAction     ExternalLink?      @relation("ServiceVersion_primaryAction", fields: [primaryActionId], references: [id])
  primaryActionId   String?            @map("primaryAction")
  secondaryActions  ExternalLink[]     @relation("ServiceVersion_secondaryActions")
  documents         Document[]         @relation("ServiceVersion_documents")
  primaryContact    Contact?           @relation("ServiceVersion_primaryContact", fields: [primaryContactId], references: [id])
  primaryContactId  String?            @map("primaryContact")
  contacts          Contact[]          @relation("ServiceVersion_contacts")
  redirect          Redirect?          @relation("ServiceVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("ServiceVersion_events")
  topics            Topic[]            @relation("ServiceVersion_topics")
  publicNotices     PublicNotice[]     @relation("ServiceVersion_publicNotices")
  communities       Community[]        @relation("ServiceVersion_communities")
  orgUnits          OrgUnit[]          @relation("ServiceVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("ServiceVersion_assemblyDistricts")
  services          Service[]          @relation("ServiceVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  trails            Trail[]            @relation("ServiceVersion_trails")
  parks             Park[]             @relation("ServiceVersion_parks")
  facilities        Facility[]         @relation("ServiceVersion_facilities")
  boards            Board[]            @relation("ServiceVersion_boards")
  plans             Plan[]             @relation("ServiceVersion_plans")
  editorNotes       String             @default("")
  isLive            Service?           @relation("Service_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([primaryActionId])
  @@index([primaryContactId])
  @@index([redirectId])
}

model ServiceDraft {
  id                String             @id @default(cuid())
  original          Service?           @relation("ServiceDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("ServiceDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("ServiceDraft_tags")
  userGroups        UserGroup[]        @relation("ServiceDraft_userGroups")
  primaryAction     ExternalLink?      @relation("ServiceDraft_primaryAction", fields: [primaryActionId], references: [id])
  primaryActionId   String?            @map("primaryAction")
  secondaryActions  ExternalLink[]     @relation("ServiceDraft_secondaryActions")
  documents         Document[]         @relation("ServiceDraft_documents")
  primaryContact    Contact?           @relation("ServiceDraft_primaryContact", fields: [primaryContactId], references: [id])
  primaryContactId  String?            @map("primaryContact")
  contacts          Contact[]          @relation("ServiceDraft_contacts")
  redirect          Redirect?          @relation("ServiceDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("ServiceDraft_events")
  topics            Topic[]            @relation("ServiceDraft_topics")
  publicNotices     PublicNotice[]     @relation("ServiceDraft_publicNotices")
  communities       Community[]        @relation("ServiceDraft_communities")
  orgUnits          OrgUnit[]          @relation("ServiceDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("ServiceDraft_assemblyDistricts")
  services          Service[]          @relation("ServiceDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  trails            Trail[]            @relation("ServiceDraft_trails")
  parks             Park[]             @relation("ServiceDraft_parks")
  facilities        Facility[]         @relation("ServiceDraft_facilities")
  boards            Board[]            @relation("ServiceDraft_boards")
  plans             Plan[]             @relation("ServiceDraft_plans")
  editorNotes       String             @default("")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([primaryActionId])
  @@index([primaryContactId])
  @@index([redirectId])
}

model Topic {
  id                                  String                    @id @default(cuid())
  heroImage                           String?
  title                               String                    @unique @default("")
  description                         String                    @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  slug                                String                    @unique @default("")
  owner                               User?                     @relation("Topic_owner", fields: [ownerId], references: [id])
  ownerId                             String?                   @map("owner")
  body                                String?
  tags                                Tag[]                     @relation("Topic_tags")
  userGroups                          UserGroup[]               @relation("Topic_userGroups")
  actions                             InternalLink[]            @relation("Topic_actions")
  documents                           Document[]                @relation("Topic_documents")
  contacts                            Contact[]                 @relation("Topic_contacts")
  redirect                            Redirect?                 @relation("Topic_redirect", fields: [redirectId], references: [id])
  redirectId                          String?                   @map("redirect")
  events                              Event[]                   @relation("Event_topics")
  topics                              Topic[]                   @relation("Topic_topics")
  publicNotices                       PublicNotice[]            @relation("PublicNotice_topics")
  communities                         Community[]               @relation("Community_topics")
  orgUnits                            OrgUnit[]                 @relation("OrgUnit_topics")
  assemblyDistricts                   AssemblyDistrict[]        @relation("AssemblyDistrict_topics")
  services                            Service[]                 @relation("Service_topics")
  createdAt                           DateTime?                 @default(now())
  updatedAt                           DateTime?                 @default(now()) @updatedAt
  highlights                          Highlight[]               @relation("Topic_highlights")
  boards                              Board[]                   @relation("Board_topics")
  parks                               Park[]                    @relation("Park_topics")
  trails                              Trail[]                   @relation("Topic_trails")
  facilities                          Facility[]                @relation("Facility_topics")
  plans                               Plan[]                    @relation("Plan_topics")
  status                              String                    @default("unpublished")
  drafts                              TopicDraft[]              @relation("TopicDraft_original")
  makeDrafts                          String?
  versions                            TopicVersion[]            @relation("TopicVersion_original")
  currentVersion                      TopicVersion?             @relation("Topic_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                    String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_topics AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_topics")
  from_AssemblyDistrictDraft_topics   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_topics")
  from_BoardVersion_topics            BoardVersion[]            @relation("BoardVersion_topics")
  from_BoardDraft_topics              BoardDraft[]              @relation("BoardDraft_topics")
  from_CommunityVersion_topics        CommunityVersion[]        @relation("CommunityVersion_topics")
  from_CommunityDraft_topics          CommunityDraft[]          @relation("CommunityDraft_topics")
  from_FacilityVersion_topics         FacilityVersion[]         @relation("FacilityVersion_topics")
  from_FacilityDraft_topics           FacilityDraft[]           @relation("FacilityDraft_topics")
  from_OrgUnitVersion_topics          OrgUnitVersion[]          @relation("OrgUnitVersion_topics")
  from_OrgUnitDraft_topics            OrgUnitDraft[]            @relation("OrgUnitDraft_topics")
  from_ParkVersion_topics             ParkVersion[]             @relation("ParkVersion_topics")
  from_ParkDraft_topics               ParkDraft[]               @relation("ParkDraft_topics")
  from_PublicNoticeVersion_topics     PublicNoticeVersion[]     @relation("PublicNoticeVersion_topics")
  from_PublicNoticeDraft_topics       PublicNoticeDraft[]       @relation("PublicNoticeDraft_topics")
  from_ServiceVersion_topics          ServiceVersion[]          @relation("ServiceVersion_topics")
  from_ServiceDraft_topics            ServiceDraft[]            @relation("ServiceDraft_topics")
  from_Topic_topics                   Topic[]                   @relation("Topic_topics")
  from_TopicVersion_topics            TopicVersion[]            @relation("TopicVersion_topics")
  from_TopicDraft_topics              TopicDraft[]              @relation("TopicDraft_topics")
  from_TrailVersion_topics            TrailVersion[]            @relation("TrailVersion_topics")
  from_TrailDraft_topics              TrailDraft[]              @relation("TrailDraft_topics")
  from_PlanVersion_topics             PlanVersion[]             @relation("PlanVersion_topics")
  from_PlanDraft_topics               PlanDraft[]               @relation("PlanDraft_topics")
  from_EventDraft_topics              EventDraft[]              @relation("EventDraft_topics")
  from_EventVersion_topics            EventVersion[]            @relation("EventVersion_topics")

  @@index([ownerId])
  @@index([redirectId])
}

model TopicVersion {
  id                String             @id @default(cuid())
  original          Topic?             @relation("TopicVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("TopicVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("TopicVersion_tags")
  userGroups        UserGroup[]        @relation("TopicVersion_userGroups")
  actions           InternalLink[]     @relation("TopicVersion_actions")
  documents         Document[]         @relation("TopicVersion_documents")
  contacts          Contact[]          @relation("TopicVersion_contacts")
  redirect          Redirect?          @relation("TopicVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("TopicVersion_events")
  topics            Topic[]            @relation("TopicVersion_topics")
  publicNotices     PublicNotice[]     @relation("TopicVersion_publicNotices")
  communities       Community[]        @relation("TopicVersion_communities")
  orgUnits          OrgUnit[]          @relation("TopicVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("TopicVersion_assemblyDistricts")
  services          Service[]          @relation("TopicVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  highlights        Highlight[]        @relation("TopicVersion_highlights")
  boards            Board[]            @relation("TopicVersion_boards")
  parks             Park[]             @relation("TopicVersion_parks")
  trails            Trail[]            @relation("TopicVersion_trails")
  facilities        Facility[]         @relation("TopicVersion_facilities")
  plans             Plan[]             @relation("TopicVersion_plans")
  isLive            Topic?             @relation("Topic_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model TopicDraft {
  id                String             @id @default(cuid())
  original          Topic?             @relation("TopicDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("TopicDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("TopicDraft_tags")
  userGroups        UserGroup[]        @relation("TopicDraft_userGroups")
  actions           InternalLink[]     @relation("TopicDraft_actions")
  documents         Document[]         @relation("TopicDraft_documents")
  contacts          Contact[]          @relation("TopicDraft_contacts")
  redirect          Redirect?          @relation("TopicDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("TopicDraft_events")
  topics            Topic[]            @relation("TopicDraft_topics")
  publicNotices     PublicNotice[]     @relation("TopicDraft_publicNotices")
  communities       Community[]        @relation("TopicDraft_communities")
  orgUnits          OrgUnit[]          @relation("TopicDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("TopicDraft_assemblyDistricts")
  services          Service[]          @relation("TopicDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  highlights        Highlight[]        @relation("TopicDraft_highlights")
  boards            Board[]            @relation("TopicDraft_boards")
  parks             Park[]             @relation("TopicDraft_parks")
  trails            Trail[]            @relation("TopicDraft_trails")
  facilities        Facility[]         @relation("TopicDraft_facilities")
  plans             Plan[]             @relation("TopicDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model Trail {
  id                                  String                    @id @default(cuid())
  heroImage                           String?
  title                               String                    @unique @default("")
  description                         String                    @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  slug                                String                    @unique @default("")
  owner                               User?                     @relation("Trail_owner", fields: [ownerId], references: [id])
  ownerId                             String?                   @map("owner")
  body                                String?
  tags                                Tag[]                     @relation("Trail_tags")
  userGroups                          UserGroup[]               @relation("Trail_userGroups")
  actions                             InternalLink[]            @relation("Trail_actions")
  documents                           Document[]                @relation("Trail_documents")
  address                             Location?                 @relation("Trail_address", fields: [addressId], references: [id])
  addressId                           String?                   @map("address")
  contacts                            Contact[]                 @relation("Trail_contacts")
  redirect                            Redirect?                 @relation("Trail_redirect", fields: [redirectId], references: [id])
  redirectId                          String?                   @map("redirect")
  events                              Event[]                   @relation("Event_trails")
  topics                              Topic[]                   @relation("Topic_trails")
  publicNotices                       PublicNotice[]            @relation("PublicNotice_trails")
  communities                         Community[]               @relation("Community_trails")
  orgUnits                            OrgUnit[]                 @relation("OrgUnit_trails")
  assemblyDistricts                   AssemblyDistrict[]        @relation("AssemblyDistrict_trails")
  services                            Service[]                 @relation("Service_trails")
  createdAt                           DateTime?                 @default(now())
  updatedAt                           DateTime?                 @default(now()) @updatedAt
  open                                Boolean                   @default(false)
  summer                              Boolean                   @default(false)
  fall                                Boolean                   @default(false)
  winter                              Boolean                   @default(false)
  spring                              Boolean                   @default(false)
  hiking                              Boolean                   @default(false)
  biking                              Boolean                   @default(false)
  horsebackRiding                     Boolean                   @default(false)
  crossCountrySkiing                  Boolean                   @default(false)
  snowshoeing                         Boolean                   @default(false)
  frisbeeGolf                         Boolean                   @default(false)
  dogWalking                          Boolean                   @default(false)
  running                             Boolean                   @default(false)
  snowMachining                       Boolean                   @default(false)
  atv                                 Boolean                   @default(false)
  dirtBiking                          Boolean                   @default(false)
  mushing                             Boolean                   @default(false)
  difficulty                          String?
  length                              String                    @default("")
  elevationChange                     String                    @default("")
  park                                Park?                     @relation("Trail_park", fields: [parkId], references: [id])
  parkId                              String?                   @map("park")
  status                              String                    @default("unpublished")
  drafts                              TrailDraft[]              @relation("TrailDraft_original")
  makeDrafts                          String?
  versions                            TrailVersion[]            @relation("TrailVersion_original")
  currentVersion                      TrailVersion?             @relation("Trail_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                    String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_trails AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_trails")
  from_AssemblyDistrictDraft_trails   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_trails")
  from_CommunityVersion_trails        CommunityVersion[]        @relation("CommunityVersion_trails")
  from_CommunityDraft_trails          CommunityDraft[]          @relation("CommunityDraft_trails")
  from_OrgUnitVersion_trails          OrgUnitVersion[]          @relation("OrgUnitVersion_trails")
  from_OrgUnitDraft_trails            OrgUnitDraft[]            @relation("OrgUnitDraft_trails")
  from_ParkVersion_trails             ParkVersion[]             @relation("ParkVersion_trails")
  from_ParkDraft_trails               ParkDraft[]               @relation("ParkDraft_trails")
  from_PublicNoticeVersion_trails     PublicNoticeVersion[]     @relation("PublicNoticeVersion_trails")
  from_PublicNoticeDraft_trails       PublicNoticeDraft[]       @relation("PublicNoticeDraft_trails")
  from_ServiceVersion_trails          ServiceVersion[]          @relation("ServiceVersion_trails")
  from_ServiceDraft_trails            ServiceDraft[]            @relation("ServiceDraft_trails")
  from_TopicVersion_trails            TopicVersion[]            @relation("TopicVersion_trails")
  from_TopicDraft_trails              TopicDraft[]              @relation("TopicDraft_trails")
  from_EventDraft_trails              EventDraft[]              @relation("EventDraft_trails")
  from_EventVersion_trails            EventVersion[]            @relation("EventVersion_trails")

  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model TrailVersion {
  id                 String             @id @default(cuid())
  original           Trail?             @relation("TrailVersion_original", fields: [originalId], references: [id])
  originalId         String?            @map("original")
  heroImage          String?
  title              String             @default("")
  description        String             @default("")
  publishAt          DateTime?
  unpublishAt        DateTime?
  reviewDate         DateTime?
  owner              User?              @relation("TrailVersion_owner", fields: [ownerId], references: [id])
  ownerId            String?            @map("owner")
  body               String?
  tags               Tag[]              @relation("TrailVersion_tags")
  userGroups         UserGroup[]        @relation("TrailVersion_userGroups")
  actions            InternalLink[]     @relation("TrailVersion_actions")
  documents          Document[]         @relation("TrailVersion_documents")
  address            Location?          @relation("TrailVersion_address", fields: [addressId], references: [id])
  addressId          String?            @map("address")
  contacts           Contact[]          @relation("TrailVersion_contacts")
  redirect           Redirect?          @relation("TrailVersion_redirect", fields: [redirectId], references: [id])
  redirectId         String?            @map("redirect")
  events             Event[]            @relation("TrailVersion_events")
  topics             Topic[]            @relation("TrailVersion_topics")
  publicNotices      PublicNotice[]     @relation("TrailVersion_publicNotices")
  communities        Community[]        @relation("TrailVersion_communities")
  orgUnits           OrgUnit[]          @relation("TrailVersion_orgUnits")
  assemblyDistricts  AssemblyDistrict[] @relation("TrailVersion_assemblyDistricts")
  services           Service[]          @relation("TrailVersion_services")
  createdAt          DateTime?          @default(now())
  updatedAt          DateTime?          @default(now()) @updatedAt
  open               Boolean            @default(false)
  summer             Boolean            @default(false)
  fall               Boolean            @default(false)
  winter             Boolean            @default(false)
  spring             Boolean            @default(false)
  hiking             Boolean            @default(false)
  biking             Boolean            @default(false)
  horsebackRiding    Boolean            @default(false)
  crossCountrySkiing Boolean            @default(false)
  snowshoeing        Boolean            @default(false)
  frisbeeGolf        Boolean            @default(false)
  dogWalking         Boolean            @default(false)
  running            Boolean            @default(false)
  snowMachining      Boolean            @default(false)
  atv                Boolean            @default(false)
  dirtBiking         Boolean            @default(false)
  mushing            Boolean            @default(false)
  difficulty         String?
  length             String             @default("")
  elevationChange    String             @default("")
  park               Park?              @relation("TrailVersion_park", fields: [parkId], references: [id])
  parkId             String?            @map("park")
  isLive             Trail?             @relation("Trail_currentVersion")
  republish          String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model TrailDraft {
  id                 String             @id @default(cuid())
  original           Trail?             @relation("TrailDraft_original", fields: [originalId], references: [id])
  originalId         String?            @map("original")
  heroImage          String?
  title              String             @default("")
  description        String             @default("")
  publishAt          DateTime?
  unpublishAt        DateTime?
  reviewDate         DateTime?
  owner              User?              @relation("TrailDraft_owner", fields: [ownerId], references: [id])
  ownerId            String?            @map("owner")
  body               String?
  tags               Tag[]              @relation("TrailDraft_tags")
  userGroups         UserGroup[]        @relation("TrailDraft_userGroups")
  actions            InternalLink[]     @relation("TrailDraft_actions")
  documents          Document[]         @relation("TrailDraft_documents")
  address            Location?          @relation("TrailDraft_address", fields: [addressId], references: [id])
  addressId          String?            @map("address")
  contacts           Contact[]          @relation("TrailDraft_contacts")
  redirect           Redirect?          @relation("TrailDraft_redirect", fields: [redirectId], references: [id])
  redirectId         String?            @map("redirect")
  events             Event[]            @relation("TrailDraft_events")
  topics             Topic[]            @relation("TrailDraft_topics")
  publicNotices      PublicNotice[]     @relation("TrailDraft_publicNotices")
  communities        Community[]        @relation("TrailDraft_communities")
  orgUnits           OrgUnit[]          @relation("TrailDraft_orgUnits")
  assemblyDistricts  AssemblyDistrict[] @relation("TrailDraft_assemblyDistricts")
  services           Service[]          @relation("TrailDraft_services")
  createdAt          DateTime?          @default(now())
  updatedAt          DateTime?          @default(now()) @updatedAt
  open               Boolean            @default(false)
  summer             Boolean            @default(false)
  fall               Boolean            @default(false)
  winter             Boolean            @default(false)
  spring             Boolean            @default(false)
  hiking             Boolean            @default(false)
  biking             Boolean            @default(false)
  horsebackRiding    Boolean            @default(false)
  crossCountrySkiing Boolean            @default(false)
  snowshoeing        Boolean            @default(false)
  frisbeeGolf        Boolean            @default(false)
  dogWalking         Boolean            @default(false)
  running            Boolean            @default(false)
  snowMachining      Boolean            @default(false)
  atv                Boolean            @default(false)
  dirtBiking         Boolean            @default(false)
  mushing            Boolean            @default(false)
  difficulty         String?
  length             String             @default("")
  elevationChange    String             @default("")
  park               Park?              @relation("TrailDraft_park", fields: [parkId], references: [id])
  parkId             String?            @map("park")
  publish            String?

  @@index([originalId])
  @@index([ownerId])
  @@index([addressId])
  @@index([redirectId])
  @@index([parkId])
}

model Plan {
  id                                 String                    @id @default(cuid())
  heroImage                          String?
  title                              String                    @unique @default("")
  description                        String                    @default("")
  publishAt                          DateTime?
  unpublishAt                        DateTime?
  reviewDate                         DateTime?
  slug                               String                    @unique @default("")
  owner                              User?                     @relation("Plan_owner", fields: [ownerId], references: [id])
  ownerId                            String?                   @map("owner")
  body                               String?
  tags                               Tag[]                     @relation("Plan_tags")
  userGroups                         UserGroup[]               @relation("Plan_userGroups")
  actions                            InternalLink[]            @relation("Plan_actions")
  documents                          Document[]                @relation("Plan_documents")
  contacts                           Contact[]                 @relation("Plan_contacts")
  redirect                           Redirect?                 @relation("Plan_redirect", fields: [redirectId], references: [id])
  redirectId                         String?                   @map("redirect")
  events                             Event[]                   @relation("Event_plans")
  topics                             Topic[]                   @relation("Plan_topics")
  publicNotices                      PublicNotice[]            @relation("Plan_publicNotices")
  communities                        Community[]               @relation("Community_plans")
  orgUnits                           OrgUnit[]                 @relation("OrgUnit_plans")
  assemblyDistricts                  AssemblyDistrict[]        @relation("AssemblyDistrict_plans")
  services                           Service[]                 @relation("Plan_services")
  createdAt                          DateTime?                 @default(now())
  updatedAt                          DateTime?                 @default(now()) @updatedAt
  effort                             ExternalLink?             @relation("Plan_effort", fields: [effortId], references: [id])
  effortId                           String?                   @map("effort")
  autoRedirectToExternalWebsite      Int                       @default(0)
  parent                             Plan?                     @relation("Plan_parent", fields: [parentId], references: [id])
  parentId                           String?                   @map("parent")
  components                         Plan[]                    @relation("Plan_parent")
  type                               String                    @default("legislative")
  code                               PlanCode[]                @relation("Plan_code")
  currentDocument                    PlanDocument?             @relation("Plan_currentDocument", fields: [currentDocumentId], references: [id])
  currentDocumentId                  String?                   @map("currentDocument")
  draftDocument                      PlanDocument?             @relation("Plan_draftDocument", fields: [draftDocumentId], references: [id])
  draftDocumentId                    String?                   @map("draftDocument")
  pastDocuments                      PlanDocument[]            @relation("Plan_pastDocuments")
  status                             String                    @default("unpublished")
  drafts                             PlanDraft[]               @relation("PlanDraft_original")
  makeDrafts                         String?
  versions                           PlanVersion[]             @relation("PlanVersion_original")
  currentVersion                     PlanVersion?              @relation("Plan_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                   String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_plans AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_plans")
  from_AssemblyDistrictDraft_plans   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_plans")
  from_CommunityVersion_plans        CommunityVersion[]        @relation("CommunityVersion_plans")
  from_CommunityDraft_plans          CommunityDraft[]          @relation("CommunityDraft_plans")
  from_OrgUnitVersion_plans          OrgUnitVersion[]          @relation("OrgUnitVersion_plans")
  from_OrgUnitDraft_plans            OrgUnitDraft[]            @relation("OrgUnitDraft_plans")
  from_PublicNoticeVersion_plans     PublicNoticeVersion[]     @relation("PublicNoticeVersion_plans")
  from_PublicNoticeDraft_plans       PublicNoticeDraft[]       @relation("PublicNoticeDraft_plans")
  from_ServiceVersion_plans          ServiceVersion[]          @relation("ServiceVersion_plans")
  from_ServiceDraft_plans            ServiceDraft[]            @relation("ServiceDraft_plans")
  from_TopicVersion_plans            TopicVersion[]            @relation("TopicVersion_plans")
  from_TopicDraft_plans              TopicDraft[]              @relation("TopicDraft_plans")
  from_PlanVersion_parent            PlanVersion[]             @relation("PlanVersion_parent")
  from_PlanVersion_components        PlanVersion[]             @relation("PlanVersion_components")
  from_PlanDraft_parent              PlanDraft[]               @relation("PlanDraft_parent")
  from_PlanDraft_components          PlanDraft[]               @relation("PlanDraft_components")
  from_EventDraft_plans              EventDraft[]              @relation("EventDraft_plans")
  from_EventVersion_plans            EventVersion[]            @relation("EventVersion_plans")

  @@index([ownerId])
  @@index([redirectId])
  @@index([effortId])
  @@index([parentId])
  @@index([currentDocumentId])
  @@index([draftDocumentId])
}

model PlanVersion {
  id                            String             @id @default(cuid())
  original                      Plan?              @relation("PlanVersion_original", fields: [originalId], references: [id])
  originalId                    String?            @map("original")
  heroImage                     String?
  title                         String             @default("")
  description                   String             @default("")
  publishAt                     DateTime?
  unpublishAt                   DateTime?
  reviewDate                    DateTime?
  owner                         User?              @relation("PlanVersion_owner", fields: [ownerId], references: [id])
  ownerId                       String?            @map("owner")
  body                          String?
  tags                          Tag[]              @relation("PlanVersion_tags")
  userGroups                    UserGroup[]        @relation("PlanVersion_userGroups")
  actions                       InternalLink[]     @relation("PlanVersion_actions")
  documents                     Document[]         @relation("PlanVersion_documents")
  contacts                      Contact[]          @relation("PlanVersion_contacts")
  redirect                      Redirect?          @relation("PlanVersion_redirect", fields: [redirectId], references: [id])
  redirectId                    String?            @map("redirect")
  events                        Event[]            @relation("PlanVersion_events")
  topics                        Topic[]            @relation("PlanVersion_topics")
  publicNotices                 PublicNotice[]     @relation("PlanVersion_publicNotices")
  communities                   Community[]        @relation("PlanVersion_communities")
  orgUnits                      OrgUnit[]          @relation("PlanVersion_orgUnits")
  assemblyDistricts             AssemblyDistrict[] @relation("PlanVersion_assemblyDistricts")
  services                      Service[]          @relation("PlanVersion_services")
  createdAt                     DateTime?          @default(now())
  updatedAt                     DateTime?          @default(now()) @updatedAt
  effort                        ExternalLink?      @relation("PlanVersion_effort", fields: [effortId], references: [id])
  effortId                      String?            @map("effort")
  autoRedirectToExternalWebsite Int                @default(0)
  parent                        Plan?              @relation("PlanVersion_parent", fields: [parentId], references: [id])
  parentId                      String?            @map("parent")
  components                    Plan[]             @relation("PlanVersion_components")
  type                          String             @default("legislative")
  code                          PlanCode[]         @relation("PlanVersion_code")
  currentDocument               PlanDocument?      @relation("PlanVersion_currentDocument", fields: [currentDocumentId], references: [id])
  currentDocumentId             String?            @map("currentDocument")
  draftDocument                 PlanDocument?      @relation("PlanVersion_draftDocument", fields: [draftDocumentId], references: [id])
  draftDocumentId               String?            @map("draftDocument")
  pastDocuments                 PlanDocument[]     @relation("PlanVersion_pastDocuments")
  isLive                        Plan?              @relation("Plan_currentVersion")
  republish                     String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([effortId])
  @@index([parentId])
  @@index([currentDocumentId])
  @@index([draftDocumentId])
}

model PlanDraft {
  id                            String             @id @default(cuid())
  original                      Plan?              @relation("PlanDraft_original", fields: [originalId], references: [id])
  originalId                    String?            @map("original")
  heroImage                     String?
  title                         String             @default("")
  description                   String             @default("")
  publishAt                     DateTime?
  unpublishAt                   DateTime?
  reviewDate                    DateTime?
  owner                         User?              @relation("PlanDraft_owner", fields: [ownerId], references: [id])
  ownerId                       String?            @map("owner")
  body                          String?
  tags                          Tag[]              @relation("PlanDraft_tags")
  userGroups                    UserGroup[]        @relation("PlanDraft_userGroups")
  actions                       InternalLink[]     @relation("PlanDraft_actions")
  documents                     Document[]         @relation("PlanDraft_documents")
  contacts                      Contact[]          @relation("PlanDraft_contacts")
  redirect                      Redirect?          @relation("PlanDraft_redirect", fields: [redirectId], references: [id])
  redirectId                    String?            @map("redirect")
  events                        Event[]            @relation("PlanDraft_events")
  topics                        Topic[]            @relation("PlanDraft_topics")
  publicNotices                 PublicNotice[]     @relation("PlanDraft_publicNotices")
  communities                   Community[]        @relation("PlanDraft_communities")
  orgUnits                      OrgUnit[]          @relation("PlanDraft_orgUnits")
  assemblyDistricts             AssemblyDistrict[] @relation("PlanDraft_assemblyDistricts")
  services                      Service[]          @relation("PlanDraft_services")
  createdAt                     DateTime?          @default(now())
  updatedAt                     DateTime?          @default(now()) @updatedAt
  effort                        ExternalLink?      @relation("PlanDraft_effort", fields: [effortId], references: [id])
  effortId                      String?            @map("effort")
  autoRedirectToExternalWebsite Int                @default(0)
  parent                        Plan?              @relation("PlanDraft_parent", fields: [parentId], references: [id])
  parentId                      String?            @map("parent")
  components                    Plan[]             @relation("PlanDraft_components")
  type                          String             @default("legislative")
  code                          PlanCode[]         @relation("PlanDraft_code")
  currentDocument               PlanDocument?      @relation("PlanDraft_currentDocument", fields: [currentDocumentId], references: [id])
  currentDocumentId             String?            @map("currentDocument")
  draftDocument                 PlanDocument?      @relation("PlanDraft_draftDocument", fields: [draftDocumentId], references: [id])
  draftDocumentId               String?            @map("draftDocument")
  pastDocuments                 PlanDocument[]     @relation("PlanDraft_pastDocuments")
  publish                       String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
  @@index([effortId])
  @@index([parentId])
  @@index([currentDocumentId])
  @@index([draftDocumentId])
}

model PlanCode {
  id                    String        @id @default(cuid())
  code                  String        @default("")
  from_Plan_code        Plan[]        @relation("Plan_code")
  from_PlanVersion_code PlanVersion[] @relation("PlanVersion_code")
  from_PlanDraft_code   PlanDraft[]   @relation("PlanDraft_code")
}

model PlanDocument {
  id                               String        @id @default(cuid())
  label                            String        @default("")
  supersededBy                     PlanDocument? @relation("PlanDocument_precededBy")
  precededBy                       PlanDocument? @relation("PlanDocument_precededBy", fields: [precededById], references: [id])
  precededById                     String?       @unique @map("precededBy")
  adoptedYear                      Int?
  document                         Document?     @relation("PlanDocument_document", fields: [documentId], references: [id])
  documentId                       String?       @map("document")
  from_Plan_currentDocument        Plan[]        @relation("Plan_currentDocument")
  from_Plan_draftDocument          Plan[]        @relation("Plan_draftDocument")
  from_Plan_pastDocuments          Plan[]        @relation("Plan_pastDocuments")
  from_PlanVersion_currentDocument PlanVersion[] @relation("PlanVersion_currentDocument")
  from_PlanVersion_draftDocument   PlanVersion[] @relation("PlanVersion_draftDocument")
  from_PlanVersion_pastDocuments   PlanVersion[] @relation("PlanVersion_pastDocuments")
  from_PlanDraft_currentDocument   PlanDraft[]   @relation("PlanDraft_currentDocument")
  from_PlanDraft_draftDocument     PlanDraft[]   @relation("PlanDraft_draftDocument")
  from_PlanDraft_pastDocuments     PlanDraft[]   @relation("PlanDraft_pastDocuments")

  @@index([documentId])
}

model Event {
  id                                  String                    @id @default(cuid())
  heroImage                           String?
  title                               String                    @unique @default("")
  description                         String                    @default("")
  publishAt                           DateTime?
  unpublishAt                         DateTime?
  reviewDate                          DateTime?
  slug                                String                    @unique @default("")
  owner                               User?                     @relation("Event_owner", fields: [ownerId], references: [id])
  ownerId                             String?                   @map("owner")
  body                                String?
  tags                                Tag[]                     @relation("Event_tags")
  userGroups                          UserGroup[]               @relation("Event_userGroups")
  actions                             InternalLink[]            @relation("Event_actions")
  documents                           Document[]                @relation("Event_documents")
  contacts                            Contact[]                 @relation("Event_contacts")
  redirect                            Redirect?                 @relation("Event_redirect", fields: [redirectId], references: [id])
  redirectId                          String?                   @map("redirect")
  events                              Event[]                   @relation("Event_events")
  topics                              Topic[]                   @relation("Event_topics")
  publicNotices                       PublicNotice[]            @relation("Event_publicNotices")
  communities                         Community[]               @relation("Community_events")
  orgUnits                            OrgUnit[]                 @relation("Event_orgUnits")
  assemblyDistricts                   AssemblyDistrict[]        @relation("AssemblyDistrict_events")
  services                            Service[]                 @relation("Event_services")
  createdAt                           DateTime?                 @default(now())
  updatedAt                           DateTime?                 @default(now()) @updatedAt
  startDate                           DateTime?
  endDate                             DateTime?
  boards                              Board[]                   @relation("Board_events")
  parks                               Park[]                    @relation("Event_parks")
  trails                              Trail[]                   @relation("Event_trails")
  facilities                          Facility[]                @relation("Event_facilities")
  plans                               Plan[]                    @relation("Event_plans")
  status                              String                    @default("unpublished")
  drafts                              EventDraft[]              @relation("EventDraft_original")
  makeDrafts                          String?
  versions                            EventVersion[]            @relation("EventVersion_original")
  currentVersion                      EventVersion?             @relation("Event_currentVersion", fields: [currentVersionId], references: [id])
  currentVersionId                    String?                   @unique @map("currentVersion")
  from_AssemblyDistrictVersion_events AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_events")
  from_AssemblyDistrictDraft_events   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_events")
  from_BoardVersion_events            BoardVersion[]            @relation("BoardVersion_events")
  from_BoardDraft_events              BoardDraft[]              @relation("BoardDraft_events")
  from_CommunityVersion_events        CommunityVersion[]        @relation("CommunityVersion_events")
  from_CommunityDraft_events          CommunityDraft[]          @relation("CommunityDraft_events")
  from_FacilityVersion_events         FacilityVersion[]         @relation("FacilityVersion_events")
  from_FacilityDraft_events           FacilityDraft[]           @relation("FacilityDraft_events")
  from_OrgUnitVersion_events          OrgUnitVersion[]          @relation("OrgUnitVersion_events")
  from_OrgUnitDraft_events            OrgUnitDraft[]            @relation("OrgUnitDraft_events")
  from_ParkVersion_events             ParkVersion[]             @relation("ParkVersion_events")
  from_ParkDraft_events               ParkDraft[]               @relation("ParkDraft_events")
  from_PublicNoticeVersion_events     PublicNoticeVersion[]     @relation("PublicNoticeVersion_events")
  from_PublicNoticeDraft_events       PublicNoticeDraft[]       @relation("PublicNoticeDraft_events")
  from_ServiceVersion_events          ServiceVersion[]          @relation("ServiceVersion_events")
  from_ServiceDraft_events            ServiceDraft[]            @relation("ServiceDraft_events")
  from_TopicVersion_events            TopicVersion[]            @relation("TopicVersion_events")
  from_TopicDraft_events              TopicDraft[]              @relation("TopicDraft_events")
  from_TrailVersion_events            TrailVersion[]            @relation("TrailVersion_events")
  from_TrailDraft_events              TrailDraft[]              @relation("TrailDraft_events")
  from_PlanVersion_events             PlanVersion[]             @relation("PlanVersion_events")
  from_PlanDraft_events               PlanDraft[]               @relation("PlanDraft_events")
  from_Event_events                   Event[]                   @relation("Event_events")
  from_EventDraft_events              EventDraft[]              @relation("EventDraft_events")
  from_EventVersion_events            EventVersion[]            @relation("EventVersion_events")

  @@index([ownerId])
  @@index([redirectId])
}

model EventDraft {
  id                String             @id @default(cuid())
  original          Event?             @relation("EventDraft_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("EventDraft_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("EventDraft_tags")
  userGroups        UserGroup[]        @relation("EventDraft_userGroups")
  actions           InternalLink[]     @relation("EventDraft_actions")
  documents         Document[]         @relation("EventDraft_documents")
  contacts          Contact[]          @relation("EventDraft_contacts")
  redirect          Redirect?          @relation("EventDraft_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("EventDraft_events")
  topics            Topic[]            @relation("EventDraft_topics")
  publicNotices     PublicNotice[]     @relation("EventDraft_publicNotices")
  communities       Community[]        @relation("EventDraft_communities")
  orgUnits          OrgUnit[]          @relation("EventDraft_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("EventDraft_assemblyDistricts")
  services          Service[]          @relation("EventDraft_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  startDate         DateTime?
  endDate           DateTime?
  boards            Board[]            @relation("EventDraft_boards")
  parks             Park[]             @relation("EventDraft_parks")
  trails            Trail[]            @relation("EventDraft_trails")
  facilities        Facility[]         @relation("EventDraft_facilities")
  plans             Plan[]             @relation("EventDraft_plans")
  publish           String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model EventVersion {
  id                String             @id @default(cuid())
  original          Event?             @relation("EventVersion_original", fields: [originalId], references: [id])
  originalId        String?            @map("original")
  heroImage         String?
  title             String             @default("")
  description       String             @default("")
  publishAt         DateTime?
  unpublishAt       DateTime?
  reviewDate        DateTime?
  owner             User?              @relation("EventVersion_owner", fields: [ownerId], references: [id])
  ownerId           String?            @map("owner")
  body              String?
  tags              Tag[]              @relation("EventVersion_tags")
  userGroups        UserGroup[]        @relation("EventVersion_userGroups")
  actions           InternalLink[]     @relation("EventVersion_actions")
  documents         Document[]         @relation("EventVersion_documents")
  contacts          Contact[]          @relation("EventVersion_contacts")
  redirect          Redirect?          @relation("EventVersion_redirect", fields: [redirectId], references: [id])
  redirectId        String?            @map("redirect")
  events            Event[]            @relation("EventVersion_events")
  topics            Topic[]            @relation("EventVersion_topics")
  publicNotices     PublicNotice[]     @relation("EventVersion_publicNotices")
  communities       Community[]        @relation("EventVersion_communities")
  orgUnits          OrgUnit[]          @relation("EventVersion_orgUnits")
  assemblyDistricts AssemblyDistrict[] @relation("EventVersion_assemblyDistricts")
  services          Service[]          @relation("EventVersion_services")
  createdAt         DateTime?          @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  startDate         DateTime?
  endDate           DateTime?
  boards            Board[]            @relation("EventVersion_boards")
  parks             Park[]             @relation("EventVersion_parks")
  trails            Trail[]            @relation("EventVersion_trails")
  facilities        Facility[]         @relation("EventVersion_facilities")
  plans             Plan[]             @relation("EventVersion_plans")
  isLive            Event?             @relation("Event_currentVersion")
  republish         String?

  @@index([originalId])
  @@index([ownerId])
  @@index([redirectId])
}

model FacilityListItem {
  id         String    @id @default(cuid())
  order      Int       @default(0)
  facility   Facility? @relation("FacilityListItem_facility", fields: [facilityId], references: [id])
  facilityId String?   @map("facility")

  @@index([facilityId])
}

model Document {
  id                                               String                    @id @default(cuid())
  title                                            String                    @default("")
  description                                      String                    @default("")
  tags                                             Tag[]                     @relation("Document_tags")
  file_filesize                                    Int?
  file_filename                                    String?
  collections                                      DocumentCollection[]      @relation("Document_collections")
  editorNotes                                      String                    @default("")
  from_BoardPage_documents                         BoardPage[]               @relation("BoardPage_documents")
  from_BoardPage_vacancyReport                     BoardPage[]               @relation("BoardPage_vacancyReport")
  from_BoardPage_applicationForm                   BoardPage[]               @relation("BoardPage_applicationForm")
  from_Election_candidateFilingDocuments           Election[]                @relation("Election_candidateFilingDocuments")
  from_Election_absenteeVotingApplication          Election[]                @relation("Election_absenteeVotingApplication")
  from_Election_electionOfficialApplication        Election[]                @relation("Election_electionOfficialApplication")
  from_Election_candidates                         Election[]                @relation("Election_candidates")
  from_Election_propositions                       Election[]                @relation("Election_propositions")
  from_Election_electionBrochure                   Election[]                @relation("Election_electionBrochure")
  from_Election_electionBallots                    Election[]                @relation("Election_electionBallots")
  from_ElectionVersion_candidateFilingDocuments    ElectionVersion[]         @relation("ElectionVersion_candidateFilingDocuments")
  from_ElectionVersion_absenteeVotingApplication   ElectionVersion[]         @relation("ElectionVersion_absenteeVotingApplication")
  from_ElectionVersion_electionOfficialApplication ElectionVersion[]         @relation("ElectionVersion_electionOfficialApplication")
  from_ElectionVersion_candidates                  ElectionVersion[]         @relation("ElectionVersion_candidates")
  from_ElectionVersion_propositions                ElectionVersion[]         @relation("ElectionVersion_propositions")
  from_ElectionVersion_electionBrochure            ElectionVersion[]         @relation("ElectionVersion_electionBrochure")
  from_ElectionVersion_electionBallots             ElectionVersion[]         @relation("ElectionVersion_electionBallots")
  from_ElectionDraft_candidateFilingDocuments      ElectionDraft[]           @relation("ElectionDraft_candidateFilingDocuments")
  from_ElectionDraft_absenteeVotingApplication     ElectionDraft[]           @relation("ElectionDraft_absenteeVotingApplication")
  from_ElectionDraft_electionOfficialApplication   ElectionDraft[]           @relation("ElectionDraft_electionOfficialApplication")
  from_ElectionDraft_candidates                    ElectionDraft[]           @relation("ElectionDraft_candidates")
  from_ElectionDraft_propositions                  ElectionDraft[]           @relation("ElectionDraft_propositions")
  from_ElectionDraft_electionBrochure              ElectionDraft[]           @relation("ElectionDraft_electionBrochure")
  from_ElectionDraft_electionBallots               ElectionDraft[]           @relation("ElectionDraft_electionBallots")
  from_ElectionResult_document                     ElectionResult[]          @relation("ElectionResult_document")
  from_ElectionsPage_referendumProcessDocument     ElectionsPage[]           @relation("ElectionsPage_referendumProcessDocument")
  from_AssemblyDistrict_documents                  AssemblyDistrict[]        @relation("AssemblyDistrict_documents")
  from_AssemblyDistrictVersion_documents           AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_documents")
  from_AssemblyDistrictDraft_documents             AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_documents")
  from_Board_documents                             Board[]                   @relation("Board_documents")
  from_Board_directory                             Board[]                   @relation("Board_directory")
  from_BoardVersion_documents                      BoardVersion[]            @relation("BoardVersion_documents")
  from_BoardVersion_directory                      BoardVersion[]            @relation("BoardVersion_directory")
  from_BoardDraft_documents                        BoardDraft[]              @relation("BoardDraft_documents")
  from_BoardDraft_directory                        BoardDraft[]              @relation("BoardDraft_directory")
  from_Community_documents                         Community[]               @relation("Community_documents")
  from_CommunityVersion_documents                  CommunityVersion[]        @relation("CommunityVersion_documents")
  from_CommunityDraft_documents                    CommunityDraft[]          @relation("CommunityDraft_documents")
  from_Facility_documents                          Facility[]                @relation("Facility_documents")
  from_FacilityVersion_documents                   FacilityVersion[]         @relation("FacilityVersion_documents")
  from_FacilityDraft_documents                     FacilityDraft[]           @relation("FacilityDraft_documents")
  from_OrgUnit_documents                           OrgUnit[]                 @relation("OrgUnit_documents")
  from_OrgUnitVersion_documents                    OrgUnitVersion[]          @relation("OrgUnitVersion_documents")
  from_OrgUnitDraft_documents                      OrgUnitDraft[]            @relation("OrgUnitDraft_documents")
  from_Park_documents                              Park[]                    @relation("Park_documents")
  from_ParkVersion_documents                       ParkVersion[]             @relation("ParkVersion_documents")
  from_ParkDraft_documents                         ParkDraft[]               @relation("ParkDraft_documents")
  from_PublicNotice_documents                      PublicNotice[]            @relation("PublicNotice_documents")
  from_PublicNoticeVersion_documents               PublicNoticeVersion[]     @relation("PublicNoticeVersion_documents")
  from_PublicNoticeDraft_documents                 PublicNoticeDraft[]       @relation("PublicNoticeDraft_documents")
  from_Service_documents                           Service[]                 @relation("Service_documents")
  from_ServiceVersion_documents                    ServiceVersion[]          @relation("ServiceVersion_documents")
  from_ServiceDraft_documents                      ServiceDraft[]            @relation("ServiceDraft_documents")
  from_Topic_documents                             Topic[]                   @relation("Topic_documents")
  from_TopicVersion_documents                      TopicVersion[]            @relation("TopicVersion_documents")
  from_TopicDraft_documents                        TopicDraft[]              @relation("TopicDraft_documents")
  from_Trail_documents                             Trail[]                   @relation("Trail_documents")
  from_TrailVersion_documents                      TrailVersion[]            @relation("TrailVersion_documents")
  from_TrailDraft_documents                        TrailDraft[]              @relation("TrailDraft_documents")
  from_Plan_documents                              Plan[]                    @relation("Plan_documents")
  from_PlanVersion_documents                       PlanVersion[]             @relation("PlanVersion_documents")
  from_PlanDraft_documents                         PlanDraft[]               @relation("PlanDraft_documents")
  from_PlanDocument_document                       PlanDocument[]            @relation("PlanDocument_document")
  from_Event_documents                             Event[]                   @relation("Event_documents")
  from_EventDraft_documents                        EventDraft[]              @relation("EventDraft_documents")
  from_EventVersion_documents                      EventVersion[]            @relation("EventVersion_documents")
  from_DocumentListItem_document                   DocumentListItem[]        @relation("DocumentListItem_document")

  @@index([title])
}

model DocumentCollection {
  id          String      @id @default(cuid())
  title       String      @unique @default("")
  description String      @default("")
  owner       User?       @relation("DocumentCollection_owner", fields: [ownerId], references: [id])
  ownerId     String?     @map("owner")
  documents   Document[]  @relation("Document_collections")
  tags        Tag[]       @relation("DocumentCollection_tags")
  userGroups  UserGroup[] @relation("DocumentCollection_userGroups")
  editorNotes String      @default("")

  @@index([ownerId])
}

model DocumentListItem {
  id       String     @id @default(cuid())
  label    String     @default("")
  order    Int        @default(0)
  document Document[] @relation("DocumentListItem_document")
}

model Image {
  id                                 String                    @id @default(cuid())
  title                              String                    @default("")
  description                        String                    @default("")
  tags                               Tag[]                     @relation("Image_tags")
  file_id                            String?
  file_filesize                      Int?
  file_width                         Int?
  file_height                        Int?
  file_extension                     String?
  from_AssemblyDistrict_photo        AssemblyDistrict[]        @relation("AssemblyDistrict_photo")
  from_AssemblyDistrictVersion_photo AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_photo")
  from_AssemblyDistrictDraft_photo   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_photo")
}

model ExternalLink {
  id                                           String           @id @default(cuid())
  label                                        String           @default("")
  url                                          Url?             @relation("ExternalLink_url", fields: [urlId], references: [id])
  urlId                                        String?          @map("url")
  from_BoardPage_ParliTrainingLink             BoardPage[]      @relation("BoardPage_ParliTrainingLink")
  from_Board_linkToAgendas                     Board[]          @relation("Board_linkToAgendas")
  from_Board_linkToResolutions                 Board[]          @relation("Board_linkToResolutions")
  from_Board_linkToPublicOpinionMessage        Board[]          @relation("Board_linkToPublicOpinionMessage")
  from_BoardVersion_linkToAgendas              BoardVersion[]   @relation("BoardVersion_linkToAgendas")
  from_BoardVersion_linkToResolutions          BoardVersion[]   @relation("BoardVersion_linkToResolutions")
  from_BoardVersion_linkToPublicOpinionMessage BoardVersion[]   @relation("BoardVersion_linkToPublicOpinionMessage")
  from_BoardDraft_linkToAgendas                BoardDraft[]     @relation("BoardDraft_linkToAgendas")
  from_BoardDraft_linkToResolutions            BoardDraft[]     @relation("BoardDraft_linkToResolutions")
  from_BoardDraft_linkToPublicOpinionMessage   BoardDraft[]     @relation("BoardDraft_linkToPublicOpinionMessage")
  from_Service_primaryAction                   Service[]        @relation("Service_primaryAction")
  from_Service_secondaryActions                Service[]        @relation("Service_secondaryActions")
  from_ServiceVersion_primaryAction            ServiceVersion[] @relation("ServiceVersion_primaryAction")
  from_ServiceVersion_secondaryActions         ServiceVersion[] @relation("ServiceVersion_secondaryActions")
  from_ServiceDraft_primaryAction              ServiceDraft[]   @relation("ServiceDraft_primaryAction")
  from_ServiceDraft_secondaryActions           ServiceDraft[]   @relation("ServiceDraft_secondaryActions")
  from_Plan_effort                             Plan[]           @relation("Plan_effort")
  from_PlanVersion_effort                      PlanVersion[]    @relation("PlanVersion_effort")
  from_PlanDraft_effort                        PlanDraft[]      @relation("PlanDraft_effort")

  @@index([urlId])
}

model InternalLink {
  id                                   String                    @id @default(cuid())
  label                                String                    @default("")
  selectItem                           Json?
  from_BoardPage_actions               BoardPage[]               @relation("BoardPage_actions")
  from_AssemblyDistrict_actions        AssemblyDistrict[]        @relation("AssemblyDistrict_actions")
  from_AssemblyDistrictVersion_actions AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_actions")
  from_AssemblyDistrictDraft_actions   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_actions")
  from_Board_actions                   Board[]                   @relation("Board_actions")
  from_BoardVersion_actions            BoardVersion[]            @relation("BoardVersion_actions")
  from_BoardDraft_actions              BoardDraft[]              @relation("BoardDraft_actions")
  from_Community_actions               Community[]               @relation("Community_actions")
  from_CommunityVersion_actions        CommunityVersion[]        @relation("CommunityVersion_actions")
  from_CommunityDraft_actions          CommunityDraft[]          @relation("CommunityDraft_actions")
  from_Facility_actions                Facility[]                @relation("Facility_actions")
  from_FacilityVersion_actions         FacilityVersion[]         @relation("FacilityVersion_actions")
  from_FacilityDraft_actions           FacilityDraft[]           @relation("FacilityDraft_actions")
  from_OrgUnit_actions                 OrgUnit[]                 @relation("OrgUnit_actions")
  from_OrgUnitVersion_actions          OrgUnitVersion[]          @relation("OrgUnitVersion_actions")
  from_OrgUnitDraft_actions            OrgUnitDraft[]            @relation("OrgUnitDraft_actions")
  from_Park_actions                    Park[]                    @relation("Park_actions")
  from_ParkVersion_actions             ParkVersion[]             @relation("ParkVersion_actions")
  from_ParkDraft_actions               ParkDraft[]               @relation("ParkDraft_actions")
  from_PublicNotice_actions            PublicNotice[]            @relation("PublicNotice_actions")
  from_PublicNoticeVersion_actions     PublicNoticeVersion[]     @relation("PublicNoticeVersion_actions")
  from_PublicNoticeDraft_actions       PublicNoticeDraft[]       @relation("PublicNoticeDraft_actions")
  from_Topic_actions                   Topic[]                   @relation("Topic_actions")
  from_TopicVersion_actions            TopicVersion[]            @relation("TopicVersion_actions")
  from_TopicDraft_actions              TopicDraft[]              @relation("TopicDraft_actions")
  from_Trail_actions                   Trail[]                   @relation("Trail_actions")
  from_TrailVersion_actions            TrailVersion[]            @relation("TrailVersion_actions")
  from_TrailDraft_actions              TrailDraft[]              @relation("TrailDraft_actions")
  from_Plan_actions                    Plan[]                    @relation("Plan_actions")
  from_PlanVersion_actions             PlanVersion[]             @relation("PlanVersion_actions")
  from_PlanDraft_actions               PlanDraft[]               @relation("PlanDraft_actions")
  from_Event_actions                   Event[]                   @relation("Event_actions")
  from_EventDraft_actions              EventDraft[]              @relation("EventDraft_actions")
  from_EventVersion_actions            EventVersion[]            @relation("EventVersion_actions")
  from_Highlight_linkedItem            Highlight[]               @relation("Highlight_linkedItem")
  from_Redirect_to                     Redirect[]                @relation("Redirect_to")
}

model Url {
  id                    String         @id @default(cuid())
  title                 String         @unique @default("")
  description           String         @default("")
  url                   String         @unique @default("")
  indexInSearchEngine   String?
  owner                 User?          @relation("Url_owner", fields: [ownerId], references: [id])
  ownerId               String?        @map("owner")
  createdAt             DateTime?      @default(now())
  updatedAt             DateTime?      @default(now()) @updatedAt
  from_ExternalLink_url ExternalLink[] @relation("ExternalLink_url")

  @@index([ownerId])
}

model Highlight {
  id                           String         @id @default(cuid())
  title                        String         @unique @default("")
  image                        String?
  message                      String         @default("")
  linkedItem                   InternalLink?  @relation("Highlight_linkedItem", fields: [linkedItemId], references: [id])
  linkedItemId                 String?        @map("linkedItem")
  editorNotes                  String         @default("")
  createdAt                    DateTime?      @default(now())
  updatedAt                    DateTime?      @default(now()) @updatedAt
  from_HomePage_toolbeltOne    HomePage[]     @relation("HomePage_toolbeltOne")
  from_HomePage_toolbeltTwo    HomePage[]     @relation("HomePage_toolbeltTwo")
  from_HomePage_toolbeltThree  HomePage[]     @relation("HomePage_toolbeltThree")
  from_HomePage_toolbeltFour   HomePage[]     @relation("HomePage_toolbeltFour")
  from_HomePage_highlightOne   HomePage[]     @relation("HomePage_highlightOne")
  from_HomePage_highlightTwo   HomePage[]     @relation("HomePage_highlightTwo")
  from_HomePage_highlightThree HomePage[]     @relation("HomePage_highlightThree")
  from_Topic_highlights        Topic[]        @relation("Topic_highlights")
  from_TopicVersion_highlights TopicVersion[] @relation("TopicVersion_highlights")
  from_TopicDraft_highlights   TopicDraft[]   @relation("TopicDraft_highlights")

  @@index([linkedItemId])
}

model Contact {
  id                                        String                    @id @default(cuid())
  name                                      String                    @default("")
  title                                     String?
  phone                                     String?
  email                                     String?
  address                                   Location?                 @relation("Contact_address", fields: [addressId], references: [id])
  addressId                                 String?                   @map("address")
  from_BoardPage_contacts                   BoardPage[]               @relation("BoardPage_contacts")
  from_ElectionsPage_stateElectionContact   ElectionsPage[]           @relation("ElectionsPage_stateElectionContact")
  from_ElectionsPage_boroughElectionContact ElectionsPage[]           @relation("ElectionsPage_boroughElectionContact")
  from_AssemblyDistrict_contacts            AssemblyDistrict[]        @relation("AssemblyDistrict_contacts")
  from_AssemblyDistrictVersion_contacts     AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_contacts")
  from_AssemblyDistrictDraft_contacts       AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_contacts")
  from_Board_contacts                       Board[]                   @relation("Board_contacts")
  from_BoardVersion_contacts                BoardVersion[]            @relation("BoardVersion_contacts")
  from_BoardDraft_contacts                  BoardDraft[]              @relation("BoardDraft_contacts")
  from_Community_contacts                   Community[]               @relation("Community_contacts")
  from_CommunityVersion_contacts            CommunityVersion[]        @relation("CommunityVersion_contacts")
  from_CommunityDraft_contacts              CommunityDraft[]          @relation("CommunityDraft_contacts")
  from_Facility_contacts                    Facility[]                @relation("Facility_contacts")
  from_FacilityVersion_contacts             FacilityVersion[]         @relation("FacilityVersion_contacts")
  from_FacilityDraft_contacts               FacilityDraft[]           @relation("FacilityDraft_contacts")
  from_OrgUnit_contacts                     OrgUnit[]                 @relation("OrgUnit_contacts")
  from_OrgUnitVersion_contacts              OrgUnitVersion[]          @relation("OrgUnitVersion_contacts")
  from_OrgUnitDraft_contacts                OrgUnitDraft[]            @relation("OrgUnitDraft_contacts")
  from_Park_contacts                        Park[]                    @relation("Park_contacts")
  from_ParkVersion_contacts                 ParkVersion[]             @relation("ParkVersion_contacts")
  from_ParkDraft_contacts                   ParkDraft[]               @relation("ParkDraft_contacts")
  from_PublicNotice_contacts                PublicNotice[]            @relation("PublicNotice_contacts")
  from_PublicNoticeVersion_contacts         PublicNoticeVersion[]     @relation("PublicNoticeVersion_contacts")
  from_PublicNoticeDraft_contacts           PublicNoticeDraft[]       @relation("PublicNoticeDraft_contacts")
  from_Service_primaryContact               Service[]                 @relation("Service_primaryContact")
  from_Service_contacts                     Service[]                 @relation("Service_contacts")
  from_ServiceVersion_primaryContact        ServiceVersion[]          @relation("ServiceVersion_primaryContact")
  from_ServiceVersion_contacts              ServiceVersion[]          @relation("ServiceVersion_contacts")
  from_ServiceDraft_primaryContact          ServiceDraft[]            @relation("ServiceDraft_primaryContact")
  from_ServiceDraft_contacts                ServiceDraft[]            @relation("ServiceDraft_contacts")
  from_Topic_contacts                       Topic[]                   @relation("Topic_contacts")
  from_TopicVersion_contacts                TopicVersion[]            @relation("TopicVersion_contacts")
  from_TopicDraft_contacts                  TopicDraft[]              @relation("TopicDraft_contacts")
  from_Trail_contacts                       Trail[]                   @relation("Trail_contacts")
  from_TrailVersion_contacts                TrailVersion[]            @relation("TrailVersion_contacts")
  from_TrailDraft_contacts                  TrailDraft[]              @relation("TrailDraft_contacts")
  from_Plan_contacts                        Plan[]                    @relation("Plan_contacts")
  from_PlanVersion_contacts                 PlanVersion[]             @relation("PlanVersion_contacts")
  from_PlanDraft_contacts                   PlanDraft[]               @relation("PlanDraft_contacts")
  from_Event_contacts                       Event[]                   @relation("Event_contacts")
  from_EventDraft_contacts                  EventDraft[]              @relation("EventDraft_contacts")
  from_EventVersion_contacts                EventVersion[]            @relation("EventVersion_contacts")
  from_ContactListItem_contact              ContactListItem[]         @relation("ContactListItem_contact")

  @@index([addressId])
}

model ContactListItem {
  id        String   @id @default(cuid())
  label     String   @default("")
  order     Int      @default(0)
  contact   Contact? @relation("ContactListItem_contact", fields: [contactId], references: [id])
  contactId String?  @map("contact")

  @@index([contactId])
}

model Location {
  id                                   String                    @id @default(cuid())
  title                                String                    @unique @default("")
  description                          String                    @default("")
  lineOne                              String                    @default("")
  lineTwo                              String                    @default("")
  city                                 String                    @default("")
  state                                String                    @default("AK")
  zip                                  String
  from_EarlyVotingLocation_address     EarlyVotingLocation[]     @relation("EarlyVotingLocation_address")
  from_AssemblyDistrict_address        AssemblyDistrict[]        @relation("AssemblyDistrict_address")
  from_AssemblyDistrictVersion_address AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_address")
  from_AssemblyDistrictDraft_address   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_address")
  from_Facility_address                Facility[]                @relation("Facility_address")
  from_FacilityVersion_address         FacilityVersion[]         @relation("FacilityVersion_address")
  from_FacilityDraft_address           FacilityDraft[]           @relation("FacilityDraft_address")
  from_Park_address                    Park[]                    @relation("Park_address")
  from_ParkVersion_address             ParkVersion[]             @relation("ParkVersion_address")
  from_ParkDraft_address               ParkDraft[]               @relation("ParkDraft_address")
  from_Trail_address                   Trail[]                   @relation("Trail_address")
  from_TrailVersion_address            TrailVersion[]            @relation("TrailVersion_address")
  from_TrailDraft_address              TrailDraft[]              @relation("TrailDraft_address")
  from_Contact_address                 Contact[]                 @relation("Contact_address")
}

model OperatingHour {
  id                             String                @id @default(cuid())
  day                            String
  open                           String                @default("")
  close                          String                @default("")
  from_EarlyVotingLocation_hours EarlyVotingLocation[] @relation("EarlyVotingLocation_hours")
  from_Facility_hours            Facility[]            @relation("Facility_hours")
  from_FacilityVersion_hours     FacilityVersion[]     @relation("FacilityVersion_hours")
  from_FacilityDraft_hours       FacilityDraft[]       @relation("FacilityDraft_hours")
  from_Park_hours                Park[]                @relation("Park_hours")
  from_ParkVersion_hours         ParkVersion[]         @relation("ParkVersion_hours")
  from_ParkDraft_hours           ParkDraft[]           @relation("ParkDraft_hours")
}

model User {
  id                                 String                    @id @default(cuid())
  authId                             String?                   @unique
  name                               String                    @default("")
  email                              String                    @unique @default("")
  password                           String?
  role                               Int?                      @default(4)
  groups                             UserGroup[]               @relation("User_groups")
  createdAt                          DateTime?                 @default(now())
  updatedAt                          DateTime?                 @default(now()) @updatedAt
  from_BoardPage_owner               BoardPage[]               @relation("BoardPage_owner")
  from_Election_owner                Election[]                @relation("Election_owner")
  from_ElectionVersion_owner         ElectionVersion[]         @relation("ElectionVersion_owner")
  from_ElectionDraft_owner           ElectionDraft[]           @relation("ElectionDraft_owner")
  from_ElectionsPage_owner           ElectionsPage[]           @relation("ElectionsPage_owner")
  from_AssemblyDistrict_owner        AssemblyDistrict[]        @relation("AssemblyDistrict_owner")
  from_AssemblyDistrictVersion_owner AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_owner")
  from_AssemblyDistrictDraft_owner   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_owner")
  from_Board_owner                   Board[]                   @relation("Board_owner")
  from_BoardVersion_owner            BoardVersion[]            @relation("BoardVersion_owner")
  from_BoardDraft_owner              BoardDraft[]              @relation("BoardDraft_owner")
  from_Community_owner               Community[]               @relation("Community_owner")
  from_CommunityVersion_owner        CommunityVersion[]        @relation("CommunityVersion_owner")
  from_CommunityDraft_owner          CommunityDraft[]          @relation("CommunityDraft_owner")
  from_Facility_owner                Facility[]                @relation("Facility_owner")
  from_FacilityVersion_owner         FacilityVersion[]         @relation("FacilityVersion_owner")
  from_FacilityDraft_owner           FacilityDraft[]           @relation("FacilityDraft_owner")
  from_OrgUnit_owner                 OrgUnit[]                 @relation("OrgUnit_owner")
  from_OrgUnitVersion_owner          OrgUnitVersion[]          @relation("OrgUnitVersion_owner")
  from_OrgUnitDraft_owner            OrgUnitDraft[]            @relation("OrgUnitDraft_owner")
  from_Park_owner                    Park[]                    @relation("Park_owner")
  from_ParkVersion_owner             ParkVersion[]             @relation("ParkVersion_owner")
  from_ParkDraft_owner               ParkDraft[]               @relation("ParkDraft_owner")
  from_PublicNotice_owner            PublicNotice[]            @relation("PublicNotice_owner")
  from_PublicNoticeVersion_owner     PublicNoticeVersion[]     @relation("PublicNoticeVersion_owner")
  from_PublicNoticeDraft_owner       PublicNoticeDraft[]       @relation("PublicNoticeDraft_owner")
  from_Service_owner                 Service[]                 @relation("Service_owner")
  from_ServiceVersion_owner          ServiceVersion[]          @relation("ServiceVersion_owner")
  from_ServiceDraft_owner            ServiceDraft[]            @relation("ServiceDraft_owner")
  from_Topic_owner                   Topic[]                   @relation("Topic_owner")
  from_TopicVersion_owner            TopicVersion[]            @relation("TopicVersion_owner")
  from_TopicDraft_owner              TopicDraft[]              @relation("TopicDraft_owner")
  from_Trail_owner                   Trail[]                   @relation("Trail_owner")
  from_TrailVersion_owner            TrailVersion[]            @relation("TrailVersion_owner")
  from_TrailDraft_owner              TrailDraft[]              @relation("TrailDraft_owner")
  from_Plan_owner                    Plan[]                    @relation("Plan_owner")
  from_PlanVersion_owner             PlanVersion[]             @relation("PlanVersion_owner")
  from_PlanDraft_owner               PlanDraft[]               @relation("PlanDraft_owner")
  from_Event_owner                   Event[]                   @relation("Event_owner")
  from_EventDraft_owner              EventDraft[]              @relation("EventDraft_owner")
  from_EventVersion_owner            EventVersion[]            @relation("EventVersion_owner")
  from_DocumentCollection_owner      DocumentCollection[]      @relation("DocumentCollection_owner")
  from_Url_owner                     Url[]                     @relation("Url_owner")
  from_UserGroup_owner               UserGroup[]               @relation("UserGroup_owner")
}

model UserGroup {
  id                                      String                    @id @default(cuid())
  name                                    String                    @default("")
  owner                                   User?                     @relation("UserGroup_owner", fields: [ownerId], references: [id])
  ownerId                                 String?                   @map("owner")
  description                             String                    @default("")
  users                                   User[]                    @relation("User_groups")
  from_Election_userGroups                Election[]                @relation("Election_userGroups")
  from_ElectionVersion_userGroups         ElectionVersion[]         @relation("ElectionVersion_userGroups")
  from_ElectionDraft_userGroups           ElectionDraft[]           @relation("ElectionDraft_userGroups")
  from_ElectionsPage_userGroups           ElectionsPage[]           @relation("ElectionsPage_userGroups")
  from_AssemblyDistrict_userGroups        AssemblyDistrict[]        @relation("AssemblyDistrict_userGroups")
  from_AssemblyDistrictVersion_userGroups AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_userGroups")
  from_AssemblyDistrictDraft_userGroups   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_userGroups")
  from_Board_userGroups                   Board[]                   @relation("Board_userGroups")
  from_BoardVersion_userGroups            BoardVersion[]            @relation("BoardVersion_userGroups")
  from_BoardDraft_userGroups              BoardDraft[]              @relation("BoardDraft_userGroups")
  from_Community_userGroups               Community[]               @relation("Community_userGroups")
  from_CommunityVersion_userGroups        CommunityVersion[]        @relation("CommunityVersion_userGroups")
  from_CommunityDraft_userGroups          CommunityDraft[]          @relation("CommunityDraft_userGroups")
  from_Facility_userGroups                Facility[]                @relation("Facility_userGroups")
  from_FacilityVersion_userGroups         FacilityVersion[]         @relation("FacilityVersion_userGroups")
  from_FacilityDraft_userGroups           FacilityDraft[]           @relation("FacilityDraft_userGroups")
  from_OrgUnit_userGroups                 OrgUnit[]                 @relation("OrgUnit_userGroups")
  from_OrgUnitVersion_userGroups          OrgUnitVersion[]          @relation("OrgUnitVersion_userGroups")
  from_OrgUnitDraft_userGroups            OrgUnitDraft[]            @relation("OrgUnitDraft_userGroups")
  from_Park_userGroups                    Park[]                    @relation("Park_userGroups")
  from_ParkVersion_userGroups             ParkVersion[]             @relation("ParkVersion_userGroups")
  from_ParkDraft_userGroups               ParkDraft[]               @relation("ParkDraft_userGroups")
  from_PublicNotice_userGroups            PublicNotice[]            @relation("PublicNotice_userGroups")
  from_PublicNoticeVersion_userGroups     PublicNoticeVersion[]     @relation("PublicNoticeVersion_userGroups")
  from_PublicNoticeDraft_userGroups       PublicNoticeDraft[]       @relation("PublicNoticeDraft_userGroups")
  from_Service_userGroups                 Service[]                 @relation("Service_userGroups")
  from_ServiceVersion_userGroups          ServiceVersion[]          @relation("ServiceVersion_userGroups")
  from_ServiceDraft_userGroups            ServiceDraft[]            @relation("ServiceDraft_userGroups")
  from_Topic_userGroups                   Topic[]                   @relation("Topic_userGroups")
  from_TopicVersion_userGroups            TopicVersion[]            @relation("TopicVersion_userGroups")
  from_TopicDraft_userGroups              TopicDraft[]              @relation("TopicDraft_userGroups")
  from_Trail_userGroups                   Trail[]                   @relation("Trail_userGroups")
  from_TrailVersion_userGroups            TrailVersion[]            @relation("TrailVersion_userGroups")
  from_TrailDraft_userGroups              TrailDraft[]              @relation("TrailDraft_userGroups")
  from_Plan_userGroups                    Plan[]                    @relation("Plan_userGroups")
  from_PlanVersion_userGroups             PlanVersion[]             @relation("PlanVersion_userGroups")
  from_PlanDraft_userGroups               PlanDraft[]               @relation("PlanDraft_userGroups")
  from_Event_userGroups                   Event[]                   @relation("Event_userGroups")
  from_EventDraft_userGroups              EventDraft[]              @relation("EventDraft_userGroups")
  from_EventVersion_userGroups            EventVersion[]            @relation("EventVersion_userGroups")
  from_DocumentCollection_userGroups      DocumentCollection[]      @relation("DocumentCollection_userGroups")

  @@index([ownerId])
}

model Alert {
  id          String    @id @default(cuid())
  title       String    @default("")
  body        String?
  urgency     Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  editorNotes String    @default("")
}

model Tag {
  id                                String                    @id @default(cuid())
  name                              String                    @default("")
  from_Election_tags                Election[]                @relation("Election_tags")
  from_ElectionVersion_tags         ElectionVersion[]         @relation("ElectionVersion_tags")
  from_ElectionDraft_tags           ElectionDraft[]           @relation("ElectionDraft_tags")
  from_AssemblyDistrict_tags        AssemblyDistrict[]        @relation("AssemblyDistrict_tags")
  from_AssemblyDistrictVersion_tags AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_tags")
  from_AssemblyDistrictDraft_tags   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_tags")
  from_Board_tags                   Board[]                   @relation("Board_tags")
  from_BoardVersion_tags            BoardVersion[]            @relation("BoardVersion_tags")
  from_BoardDraft_tags              BoardDraft[]              @relation("BoardDraft_tags")
  from_Community_tags               Community[]               @relation("Community_tags")
  from_CommunityVersion_tags        CommunityVersion[]        @relation("CommunityVersion_tags")
  from_CommunityDraft_tags          CommunityDraft[]          @relation("CommunityDraft_tags")
  from_Facility_tags                Facility[]                @relation("Facility_tags")
  from_FacilityVersion_tags         FacilityVersion[]         @relation("FacilityVersion_tags")
  from_FacilityDraft_tags           FacilityDraft[]           @relation("FacilityDraft_tags")
  from_OrgUnit_tags                 OrgUnit[]                 @relation("OrgUnit_tags")
  from_OrgUnitVersion_tags          OrgUnitVersion[]          @relation("OrgUnitVersion_tags")
  from_OrgUnitDraft_tags            OrgUnitDraft[]            @relation("OrgUnitDraft_tags")
  from_Park_tags                    Park[]                    @relation("Park_tags")
  from_ParkVersion_tags             ParkVersion[]             @relation("ParkVersion_tags")
  from_ParkDraft_tags               ParkDraft[]               @relation("ParkDraft_tags")
  from_PublicNotice_tags            PublicNotice[]            @relation("PublicNotice_tags")
  from_PublicNoticeVersion_tags     PublicNoticeVersion[]     @relation("PublicNoticeVersion_tags")
  from_PublicNoticeDraft_tags       PublicNoticeDraft[]       @relation("PublicNoticeDraft_tags")
  from_Service_tags                 Service[]                 @relation("Service_tags")
  from_ServiceVersion_tags          ServiceVersion[]          @relation("ServiceVersion_tags")
  from_ServiceDraft_tags            ServiceDraft[]            @relation("ServiceDraft_tags")
  from_Topic_tags                   Topic[]                   @relation("Topic_tags")
  from_TopicVersion_tags            TopicVersion[]            @relation("TopicVersion_tags")
  from_TopicDraft_tags              TopicDraft[]              @relation("TopicDraft_tags")
  from_Trail_tags                   Trail[]                   @relation("Trail_tags")
  from_TrailVersion_tags            TrailVersion[]            @relation("TrailVersion_tags")
  from_TrailDraft_tags              TrailDraft[]              @relation("TrailDraft_tags")
  from_Plan_tags                    Plan[]                    @relation("Plan_tags")
  from_PlanVersion_tags             PlanVersion[]             @relation("PlanVersion_tags")
  from_PlanDraft_tags               PlanDraft[]               @relation("PlanDraft_tags")
  from_Event_tags                   Event[]                   @relation("Event_tags")
  from_EventDraft_tags              EventDraft[]              @relation("EventDraft_tags")
  from_EventVersion_tags            EventVersion[]            @relation("EventVersion_tags")
  from_Document_tags                Document[]                @relation("Document_tags")
  from_DocumentCollection_tags      DocumentCollection[]      @relation("DocumentCollection_tags")
  from_Image_tags                   Image[]                   @relation("Image_tags")
}

model Redirect {
  id                                    String                    @id @default(cuid())
  from                                  String                    @unique @default("")
  to                                    InternalLink?             @relation("Redirect_to", fields: [toId], references: [id])
  toId                                  String?                   @map("to")
  redirectMessage                       String                    @default("")
  from_AssemblyDistrict_redirect        AssemblyDistrict[]        @relation("AssemblyDistrict_redirect")
  from_AssemblyDistrictVersion_redirect AssemblyDistrictVersion[] @relation("AssemblyDistrictVersion_redirect")
  from_AssemblyDistrictDraft_redirect   AssemblyDistrictDraft[]   @relation("AssemblyDistrictDraft_redirect")
  from_Board_redirect                   Board[]                   @relation("Board_redirect")
  from_BoardVersion_redirect            BoardVersion[]            @relation("BoardVersion_redirect")
  from_BoardDraft_redirect              BoardDraft[]              @relation("BoardDraft_redirect")
  from_Community_redirect               Community[]               @relation("Community_redirect")
  from_CommunityVersion_redirect        CommunityVersion[]        @relation("CommunityVersion_redirect")
  from_CommunityDraft_redirect          CommunityDraft[]          @relation("CommunityDraft_redirect")
  from_Facility_redirect                Facility[]                @relation("Facility_redirect")
  from_FacilityVersion_redirect         FacilityVersion[]         @relation("FacilityVersion_redirect")
  from_FacilityDraft_redirect           FacilityDraft[]           @relation("FacilityDraft_redirect")
  from_OrgUnit_redirect                 OrgUnit[]                 @relation("OrgUnit_redirect")
  from_OrgUnitVersion_redirect          OrgUnitVersion[]          @relation("OrgUnitVersion_redirect")
  from_OrgUnitDraft_redirect            OrgUnitDraft[]            @relation("OrgUnitDraft_redirect")
  from_Park_redirect                    Park[]                    @relation("Park_redirect")
  from_ParkVersion_redirect             ParkVersion[]             @relation("ParkVersion_redirect")
  from_ParkDraft_redirect               ParkDraft[]               @relation("ParkDraft_redirect")
  from_PublicNotice_redirect            PublicNotice[]            @relation("PublicNotice_redirect")
  from_PublicNoticeVersion_redirect     PublicNoticeVersion[]     @relation("PublicNoticeVersion_redirect")
  from_PublicNoticeDraft_redirect       PublicNoticeDraft[]       @relation("PublicNoticeDraft_redirect")
  from_Service_redirect                 Service[]                 @relation("Service_redirect")
  from_ServiceVersion_redirect          ServiceVersion[]          @relation("ServiceVersion_redirect")
  from_ServiceDraft_redirect            ServiceDraft[]            @relation("ServiceDraft_redirect")
  from_Topic_redirect                   Topic[]                   @relation("Topic_redirect")
  from_TopicVersion_redirect            TopicVersion[]            @relation("TopicVersion_redirect")
  from_TopicDraft_redirect              TopicDraft[]              @relation("TopicDraft_redirect")
  from_Trail_redirect                   Trail[]                   @relation("Trail_redirect")
  from_TrailVersion_redirect            TrailVersion[]            @relation("TrailVersion_redirect")
  from_TrailDraft_redirect              TrailDraft[]              @relation("TrailDraft_redirect")
  from_Plan_redirect                    Plan[]                    @relation("Plan_redirect")
  from_PlanVersion_redirect             PlanVersion[]             @relation("PlanVersion_redirect")
  from_PlanDraft_redirect               PlanDraft[]               @relation("PlanDraft_redirect")
  from_Event_redirect                   Event[]                   @relation("Event_redirect")
  from_EventDraft_redirect              EventDraft[]              @relation("EventDraft_redirect")
  from_EventVersion_redirect            EventVersion[]            @relation("EventVersion_redirect")

  @@index([toId])
}
